
state 0
	$accept: .list $end 
	$$1: .    (1)

	.  reduce 1 (src line 69)

	list  goto 1
	$$1  goto 2

state 1
	$accept:  list.$end 

	$end  accept
	.  error


state 2
	list:  $$1.stmts 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 3
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 3
	list:  $$1 stmts.    (2)

	.  reduce 2 (src line 74)


state 4
	stmts:  stmt.stmts 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 58
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 5
	stmt:  ';'.    (7)

	.  reduce 7 (src line 85)


6: shift/reduce conflict (shift 59(0), red'n 8(0)) on ';'
state 6
	stmt:  nosemi.    (8)
	stmt:  nosemi.';' 

	';'  shift 59
	.  reduce 8 (src line 86)


state 7
	nosemi:  stmtnv.    (10)

	.  reduce 10 (src line 89)


8: shift/reduce conflict (shift 80(0), red'n 11(0)) on SYM_IN
8: shift/reduce conflict (shift 90(1), red'n 11(0)) on PLUSEQ
8: shift/reduce conflict (shift 91(1), red'n 11(0)) on MINUSEQ
8: shift/reduce conflict (shift 92(1), red'n 11(0)) on MULEQ
8: shift/reduce conflict (shift 93(1), red'n 11(0)) on DIVEQ
8: shift/reduce conflict (shift 95(1), red'n 11(0)) on AMPEQ
8: shift/reduce conflict (shift 84(15), red'n 11(0)) on INC
8: shift/reduce conflict (shift 85(15), red'n 11(0)) on DEC
8: shift/reduce conflict (shift 94(1), red'n 11(0)) on OREQ
8: shift/reduce conflict (shift 96(1), red'n 11(0)) on XOREQ
8: shift/reduce conflict (shift 97(1), red'n 11(0)) on RSHIFTEQ
8: shift/reduce conflict (shift 98(1), red'n 11(0)) on LSHIFTEQ
8: shift/reduce conflict (shift 99(1), red'n 11(0)) on '='
8: shift/reduce conflict (shift 62(2), red'n 11(0)) on '?'
8: shift/reduce conflict (shift 89(4), red'n 11(0)) on OR
8: shift/reduce conflict (shift 88(5), red'n 11(0)) on AND
8: shift/reduce conflict (shift 68(6), red'n 11(0)) on '|'
8: shift/reduce conflict (shift 70(7), red'n 11(0)) on '^'
8: shift/reduce conflict (shift 69(8), red'n 11(0)) on '&'
8: shift/reduce conflict (shift 73(9), red'n 11(0)) on GT
8: shift/reduce conflict (shift 75(9), red'n 11(0)) on GE
8: shift/reduce conflict (shift 74(9), red'n 11(0)) on LT
8: shift/reduce conflict (shift 76(9), red'n 11(0)) on LE
8: shift/reduce conflict (shift 77(9), red'n 11(0)) on EQ
8: shift/reduce conflict (shift 79(9), red'n 11(0)) on NE
8: shift/reduce conflict (shift 78(9), red'n 11(0)) on REGEXEQ
8: shift/reduce conflict (shift 71(10), red'n 11(0)) on LSHIFT
8: shift/reduce conflict (shift 72(10), red'n 11(0)) on RSHIFT
8: shift/reduce conflict (shift 64(11), red'n 11(0)) on '+'
8: shift/reduce conflict (shift 65(11), red'n 11(0)) on '-'
8: shift/reduce conflict (shift 66(12), red'n 11(0)) on '*'
8: shift/reduce conflict (shift 67(12), red'n 11(0)) on '/'
8: shift/reduce conflict (shift 63(14), red'n 11(0)) on '%'
8: shift/reduce conflict (shift 86(14), red'n 11(0)) on '.'
8: shift/reduce conflict (shift 87(0), red'n 11(0)) on '('
8: shift/reduce conflict (shift 61(0), red'n 11(0)) on '{'
8: shift/reduce conflict (shift 60(0), red'n 11(0)) on '['
state 8
	nosemi:  expr.    (11)
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 11 (src line 90)

	and  goto 81
	or  goto 82
	equals  goto 83

9: shift/reduce conflict (shift 100(0), red'n 12(0)) on '('
state 9
	stmtnv:  RETURN.    (12)
	stmtnv:  RETURN.'(' ')' 
	stmtnv:  RETURN.'(' expr ')' 

	'('  shift 100
	.  reduce 12 (src line 91)


state 10
	stmtnv:  BREAK.    (15)

	.  reduce 15 (src line 98)


state 11
	stmtnv:  CONTINUE.    (16)

	.  reduce 16 (src line 103)


state 12
	stmtnv:  GLOBALDEC.$$17 globlist 
	expr:  GLOBALDEC.'(' $$97 globvar $$98 ')' 
	$$17: .    (17)

	'('  shift 102
	.  reduce 17 (src line 108)

	$$17  goto 101

state 13
	expr:  '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 103
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 14
	expr:  SYM_DELETE.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 104
	var  goto 27

state 15
	expr:  READONLY.var 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 106

state 16
	expr:  ONCHANGE.'(' var ',' expr ')' 

	'('  shift 108
	.  error


state 17
	expr:  WHILE.$$23 '(' expr tcond ')' stmt goto end 
	$$23: .    (23)

	.  reduce 23 (src line 129)

	$$23  goto 109

state 18
	expr:  FOR.'(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')' stmt goto end 
	expr:  FOR.'(' var SYM_IN $$27 expr forin1 forin2 ')' stmt goto forinend 

	'('  shift 110
	.  error


state 19
	expr:  IF.'(' expr tcond ')' stmt end 
	expr:  IF.'(' expr tcond ')' stmt ELSE goto stmt end 

	'('  shift 111
	.  error


state 20
	expr:  KW_NEW.var '(' prefunc3 $$31 narglist ')' 
	expr:  KW_NEW.'(' prefunc3 expr ')' var '(' narglist ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	'('  shift 113
	.  error

	var  goto 112

state 21
	expr:  UNDEFINE.var 
	expr:  UNDEFINE.'(' var ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	'('  shift 115
	.  error

	var  goto 114

state 22
	expr:  '['.newthing1 arrlist ']' 
	newthing1: .    (132)

	.  reduce 132 (src line 454)

	newthing1  goto 116

state 23
	expr:  INTEGER.    (37)

	.  reduce 37 (src line 202)


24: shift/reduce conflict (shift 119(0), red'n 38(0)) on DUR
24: shift/reduce conflict (shift 118(0), red'n 38(0)) on VOL
24: shift/reduce conflict (shift 122(0), red'n 38(0)) on TIME
24: shift/reduce conflict (shift 120(0), red'n 38(0)) on CHAN
24: shift/reduce conflict (shift 123(0), red'n 38(0)) on PITCH
24: shift/reduce conflict (shift 124(0), red'n 38(0)) on LENGTH
24: shift/reduce conflict (shift 128(0), red'n 38(0)) on NUMBER
24: shift/reduce conflict (shift 125(0), red'n 38(0)) on TYPE
24: shift/reduce conflict (shift 126(0), red'n 38(0)) on ATTRIB
24: shift/reduce conflict (shift 127(0), red'n 38(0)) on FLAGS
24: shift/reduce conflict (shift 121(0), red'n 38(0)) on PORT
state 24
	expr:  DOUBLE.    (38)
	expr:  DOUBLE.dottype 

	DUR  shift 119
	VOL  shift 118
	TIME  shift 122
	CHAN  shift 120
	PITCH  shift 123
	LENGTH  shift 124
	NUMBER  shift 128
	TYPE  shift 125
	ATTRIB  shift 126
	FLAGS  shift 127
	PORT  shift 121
	.  reduce 38 (src line 203)

	dottype  goto 117

state 25
	expr:  STRING.    (39)

	.  reduce 39 (src line 204)


state 26
	expr:  PHRASE.    (40)

	.  reduce 40 (src line 205)


27: shift/reduce conflict (shift 129(0), red'n 41(0)) on '('
state 27
	expr:  var.    (41)
	expr:  var.'(' prefunc3 arglist ')' 

	'('  shift 129
	.  reduce 41 (src line 206)


state 28
	expr:  QMARK2.    (42)

	.  reduce 42 (src line 207)


state 29
	expr:  '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 130
	var  goto 27

state 30
	expr:  DEFINED.'(' var ')' 
	expr:  DEFINED.'(' '$' ')' 
	expr:  DEFINED.'(' DOLLAR2 ')' 
	expr:  DEFINED.'(' expr '.' method ')' 
	expr:  DEFINED.var 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	'('  shift 131
	.  error

	var  goto 132

state 31
	expr:  '-'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 133
	var  goto 27

state 32
	expr:  '~'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 134
	var  goto 27

state 33
	expr:  BANG.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 135
	var  goto 27

state 34
	expr:  INC.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 136
	var  goto 27

state 35
	expr:  DEC.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 137
	var  goto 27

state 36
	expr:  EVAL.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 138
	var  goto 27

state 37
	expr:  '$'.    (82)

	.  reduce 82 (src line 269)


state 38
	expr:  DOLLAR2.    (83)

	.  reduce 83 (src line 270)


state 39
	expr:  OBJECT.    (84)

	.  reduce 84 (src line 271)


state 40
	expr:  TASK.var '(' prefunc3 arglist ')' 
	expr:  TASK.expr '(' arglist ')' 
	expr:  TASK.expr '.' method '(' preobj arglist ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 140
	var  goto 139

state 41
	expr:  NARGS.'(' ')' 

	'('  shift 141
	.  error


state 42
	expr:  TYPEOF.'(' expr ')' 

	'('  shift 142
	.  error


state 43
	expr:  XY.'(' expr ',' expr ')' 
	expr:  XY.'(' expr ',' expr ',' expr ',' expr ')' 

	'('  shift 143
	.  error


state 44
	expr:  FUNC.'(' expr ')' 
	expr:  FUNC.var $$101 funcstart '(' $$102 prmlist $$103 ')' '{' stmts '}' 
	expr:  FUNC.var $$105 funcstart $$106 '{' stmts '}' 
	expr:  FUNC.uniqvar $$108 funcstart '(' $$109 prmlist $$110 ')' '{' stmts '}' 
	expr:  FUNC.uniqvar $$112 funcstart $$113 '{' stmts '}' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	'?'  shift 147
	'('  shift 144
	.  error

	uniqvar  goto 146
	var  goto 145

45: shift/reduce conflict (shift 107(0), red'n 210(0)) on CLASS
45: shift/reduce conflict (shift 48(0), red'n 210(0)) on DUR
45: shift/reduce conflict (shift 47(0), red'n 210(0)) on VOL
45: shift/reduce conflict (shift 51(0), red'n 210(0)) on TIME
45: shift/reduce conflict (shift 49(0), red'n 210(0)) on CHAN
45: shift/reduce conflict (shift 52(0), red'n 210(0)) on PITCH
45: shift/reduce conflict (shift 53(0), red'n 210(0)) on LENGTH
45: shift/reduce conflict (shift 57(0), red'n 210(0)) on NUMBER
45: shift/reduce conflict (shift 54(0), red'n 210(0)) on TYPE
45: shift/reduce conflict (shift 55(0), red'n 210(0)) on ATTRIB
45: shift/reduce conflict (shift 56(0), red'n 210(0)) on FLAGS
45: shift/reduce conflict (shift 50(0), red'n 210(0)) on PORT
45: shift/reduce conflict (shift 46(0), red'n 210(0)) on NAME
state 45
	expr:  CLASS.var $$115 funcstart $$116 '{' methdefs '}' 
	var:  CLASS.    (210)

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  reduce 210 (src line 572)

	var  goto 148

state 46
	var:  NAME.    (198)

	.  reduce 198 (src line 560)


state 47
	var:  VOL.    (199)

	.  reduce 199 (src line 561)


state 48
	var:  DUR.    (200)

	.  reduce 200 (src line 562)


state 49
	var:  CHAN.    (201)

	.  reduce 201 (src line 563)


state 50
	var:  PORT.    (202)

	.  reduce 202 (src line 564)


state 51
	var:  TIME.    (203)

	.  reduce 203 (src line 565)


state 52
	var:  PITCH.    (204)

	.  reduce 204 (src line 566)


state 53
	var:  LENGTH.    (205)

	.  reduce 205 (src line 567)


state 54
	var:  TYPE.    (206)

	.  reduce 206 (src line 568)


state 55
	var:  ATTRIB.    (207)

	.  reduce 207 (src line 569)


state 56
	var:  FLAGS.    (208)

	.  reduce 208 (src line 570)


state 57
	var:  NUMBER.    (209)

	.  reduce 209 (src line 571)


state 58
	stmts:  stmt stmts.    (4)

	.  reduce 4 (src line 80)


state 59
	stmt:  nosemi ';'.    (9)

	.  reduce 9 (src line 87)


state 60
	expr:  expr '['.expr ']' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 149
	var  goto 27

state 61
	expr:  expr '{'.select1 select2 expr select3 '}' end 
	select1: .    (166)

	.  reduce 166 (src line 507)

	select1  goto 150

state 62
	expr:  expr '?'.tcond expr goto ':' expr end 
	tcond: .    (157)

	.  reduce 157 (src line 490)

	tcond  goto 151

state 63
	expr:  expr '%'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 152
	var  goto 27

state 64
	expr:  expr '+'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 153
	var  goto 27

state 65
	expr:  expr '-'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 154
	var  goto 27

state 66
	expr:  expr '*'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 155
	var  goto 27

state 67
	expr:  expr '/'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 156
	var  goto 27

state 68
	expr:  expr '|'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 157
	var  goto 27

state 69
	expr:  expr '&'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 158
	var  goto 27

state 70
	expr:  expr '^'.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 159
	var  goto 27

state 71
	expr:  expr LSHIFT.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 160
	var  goto 27

state 72
	expr:  expr RSHIFT.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 161
	var  goto 27

state 73
	expr:  expr GT.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 162
	var  goto 27

state 74
	expr:  expr LT.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 163
	var  goto 27

state 75
	expr:  expr GE.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 164
	var  goto 27

state 76
	expr:  expr LE.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 165
	var  goto 27

state 77
	expr:  expr EQ.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 166
	var  goto 27

state 78
	expr:  expr REGEXEQ.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 167
	var  goto 27

state 79
	expr:  expr NE.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 168
	var  goto 27

state 80
	expr:  expr SYM_IN.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 169
	var  goto 27

state 81
	expr:  expr and.expr end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 170
	var  goto 27

state 82
	expr:  expr or.expr end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 171
	var  goto 27

state 83
	expr:  expr equals.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 172
	var  goto 27

state 84
	expr:  expr INC.    (77)

	.  reduce 77 (src line 264)


state 85
	expr:  expr DEC.    (78)

	.  reduce 78 (src line 265)


state 86
	expr:  expr '.'.dottype 
	expr:  expr '.'.method 
	expr:  expr '.'.method '(' preobj arglist ')' 

	SYM_DELETE  shift 176
	CLASS  shift 177
	DUR  shift 119
	VOL  shift 118
	TIME  shift 122
	CHAN  shift 120
	PITCH  shift 123
	LENGTH  shift 124
	NUMBER  shift 128
	TYPE  shift 125
	ATTRIB  shift 126
	FLAGS  shift 127
	PORT  shift 121
	NAME  shift 175
	'('  shift 178
	.  error

	method  goto 174
	dottype  goto 173

state 87
	expr:  expr '('.prefunc1 arglist ')' 
	prefunc1: .    (130)

	.  reduce 130 (src line 448)

	prefunc1  goto 179

state 88
	and:  AND.    (164)

	.  reduce 164 (src line 503)


state 89
	or:  OR.    (165)

	.  reduce 165 (src line 505)


state 90
	equals:  PLUSEQ.    (145)

	.  reduce 145 (src line 475)


state 91
	equals:  MINUSEQ.    (146)

	.  reduce 146 (src line 476)


state 92
	equals:  MULEQ.    (147)

	.  reduce 147 (src line 477)


state 93
	equals:  DIVEQ.    (148)

	.  reduce 148 (src line 478)


state 94
	equals:  OREQ.    (149)

	.  reduce 149 (src line 479)


state 95
	equals:  AMPEQ.    (150)

	.  reduce 150 (src line 480)


state 96
	equals:  XOREQ.    (151)

	.  reduce 151 (src line 481)


state 97
	equals:  RSHIFTEQ.    (152)

	.  reduce 152 (src line 482)


state 98
	equals:  LSHIFTEQ.    (153)

	.  reduce 153 (src line 483)


state 99
	equals:  '='.    (154)

	.  reduce 154 (src line 484)


state 100
	stmtnv:  RETURN '('.')' 
	stmtnv:  RETURN '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	')'  shift 180
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 181
	var  goto 27

state 101
	stmtnv:  GLOBALDEC $$17.globlist 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 184
	globvar  goto 183
	globlist  goto 182

state 102
	expr:  GLOBALDEC '('.$$97 globvar $$98 ')' 
	$$97: .    (97)

	.  reduce 97 (src line 317)

	$$97  goto 185

state 103
	expr:  '{' stmts.'}' 

	'}'  shift 186
	.  error


104: shift/reduce conflict (shift 80(0), red'n 20(0)) on SYM_IN
104: shift/reduce conflict (shift 90(1), red'n 20(0)) on PLUSEQ
104: shift/reduce conflict (shift 91(1), red'n 20(0)) on MINUSEQ
104: shift/reduce conflict (shift 92(1), red'n 20(0)) on MULEQ
104: shift/reduce conflict (shift 93(1), red'n 20(0)) on DIVEQ
104: shift/reduce conflict (shift 95(1), red'n 20(0)) on AMPEQ
104: shift/reduce conflict (shift 84(15), red'n 20(0)) on INC
104: shift/reduce conflict (shift 85(15), red'n 20(0)) on DEC
104: shift/reduce conflict (shift 94(1), red'n 20(0)) on OREQ
104: shift/reduce conflict (shift 96(1), red'n 20(0)) on XOREQ
104: shift/reduce conflict (shift 97(1), red'n 20(0)) on RSHIFTEQ
104: shift/reduce conflict (shift 98(1), red'n 20(0)) on LSHIFTEQ
104: shift/reduce conflict (shift 99(1), red'n 20(0)) on '='
104: shift/reduce conflict (shift 62(2), red'n 20(0)) on '?'
104: shift/reduce conflict (shift 89(4), red'n 20(0)) on OR
104: shift/reduce conflict (shift 88(5), red'n 20(0)) on AND
104: shift/reduce conflict (shift 68(6), red'n 20(0)) on '|'
104: shift/reduce conflict (shift 70(7), red'n 20(0)) on '^'
104: shift/reduce conflict (shift 69(8), red'n 20(0)) on '&'
104: shift/reduce conflict (shift 73(9), red'n 20(0)) on GT
104: shift/reduce conflict (shift 75(9), red'n 20(0)) on GE
104: shift/reduce conflict (shift 74(9), red'n 20(0)) on LT
104: shift/reduce conflict (shift 76(9), red'n 20(0)) on LE
104: shift/reduce conflict (shift 77(9), red'n 20(0)) on EQ
104: shift/reduce conflict (shift 79(9), red'n 20(0)) on NE
104: shift/reduce conflict (shift 78(9), red'n 20(0)) on REGEXEQ
104: shift/reduce conflict (shift 71(10), red'n 20(0)) on LSHIFT
104: shift/reduce conflict (shift 72(10), red'n 20(0)) on RSHIFT
104: shift/reduce conflict (shift 64(11), red'n 20(0)) on '+'
104: shift/reduce conflict (shift 65(11), red'n 20(0)) on '-'
104: shift/reduce conflict (shift 66(12), red'n 20(0)) on '*'
104: shift/reduce conflict (shift 67(12), red'n 20(0)) on '/'
104: shift/reduce conflict (shift 63(14), red'n 20(0)) on '%'
104: shift/reduce conflict (shift 86(14), red'n 20(0)) on '.'
104: shift/reduce conflict (shift 87(0), red'n 20(0)) on '('
104: shift/reduce conflict (shift 61(0), red'n 20(0)) on '{'
104: shift/reduce conflict (shift 60(0), red'n 20(0)) on '['
state 104
	expr:  SYM_DELETE expr.    (20)
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 20 (src line 112)

	and  goto 81
	or  goto 82
	equals  goto 83

state 105
	expr:  GLOBALDEC.'(' $$97 globvar $$98 ')' 

	'('  shift 102
	.  error


state 106
	expr:  READONLY var.    (21)

	.  reduce 21 (src line 121)


state 107
	var:  CLASS.    (210)

	.  reduce 210 (src line 572)


state 108
	expr:  ONCHANGE '('.var ',' expr ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 187

state 109
	expr:  WHILE $$23.'(' expr tcond ')' stmt goto end 

	'('  shift 188
	.  error


state 110
	expr:  FOR '('.optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')' stmt goto end 
	expr:  FOR '('.var SYM_IN $$27 expr forin1 forin2 ')' stmt goto forinend 
	optstmt: .    (5)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 5 (src line 82)

	expr  goto 8
	nosemi  goto 191
	optstmt  goto 189
	stmtnv  goto 7
	var  goto 190

state 111
	expr:  IF '('.expr tcond ')' stmt end 
	expr:  IF '('.expr tcond ')' stmt ELSE goto stmt end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 192
	var  goto 27

state 112
	expr:  KW_NEW var.'(' prefunc3 $$31 narglist ')' 

	'('  shift 193
	.  error


state 113
	expr:  KW_NEW '('.prefunc3 expr ')' var '(' narglist ')' 
	prefunc3: .    (131)

	.  reduce 131 (src line 450)

	prefunc3  goto 194

state 114
	expr:  UNDEFINE var.    (34)

	.  reduce 34 (src line 189)


state 115
	expr:  UNDEFINE '('.var ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 195

state 116
	expr:  '[' newthing1.arrlist ']' 
	arrlist: .    (192)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 192 (src line 551)

	expr  goto 198
	var  goto 27
	arrlist  goto 196
	arritem  goto 197

state 117
	expr:  DOUBLE dottype.    (43)

	.  reduce 43 (src line 214)


state 118
	dottype:  VOL.    (134)

	.  reduce 134 (src line 458)


state 119
	dottype:  DUR.    (135)

	.  reduce 135 (src line 459)


state 120
	dottype:  CHAN.    (136)

	.  reduce 136 (src line 460)


state 121
	dottype:  PORT.    (137)

	.  reduce 137 (src line 461)


state 122
	dottype:  TIME.    (138)

	.  reduce 138 (src line 462)


state 123
	dottype:  PITCH.    (139)

	.  reduce 139 (src line 463)


state 124
	dottype:  LENGTH.    (140)

	.  reduce 140 (src line 464)


state 125
	dottype:  TYPE.    (141)

	.  reduce 141 (src line 465)


state 126
	dottype:  ATTRIB.    (142)

	.  reduce 142 (src line 466)


state 127
	dottype:  FLAGS.    (143)

	.  reduce 143 (src line 467)


state 128
	dottype:  NUMBER.    (144)

	.  reduce 144 (src line 468)


state 129
	expr:  var '('.prefunc3 arglist ')' 
	prefunc3: .    (131)

	.  reduce 131 (src line 450)

	prefunc3  goto 199

state 130
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  '(' expr.')' 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 200
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 131
	expr:  DEFINED '('.var ')' 
	expr:  DEFINED '('.'$' ')' 
	expr:  DEFINED '('.DOLLAR2 ')' 
	expr:  DEFINED '('.expr '.' method ')' 

	QMARK2  shift 28
	DOLLAR2  shift 203
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 202
	.  error

	expr  goto 204
	var  goto 201

state 132
	expr:  DEFINED var.    (52)

	.  reduce 52 (src line 238)


133: shift/reduce conflict (shift 80(0), red'n 63(13)) on SYM_IN
133: shift/reduce conflict (shift 87(0), red'n 63(13)) on '('
133: shift/reduce conflict (shift 61(0), red'n 63(13)) on '{'
133: shift/reduce conflict (shift 60(0), red'n 63(13)) on '['
state 133
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  '-' expr.    (63)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 63 (src line 249)

	and  goto 81
	or  goto 82
	equals  goto 83

134: shift/reduce conflict (shift 80(0), red'n 64(13)) on SYM_IN
134: shift/reduce conflict (shift 87(0), red'n 64(13)) on '('
134: shift/reduce conflict (shift 61(0), red'n 64(13)) on '{'
134: shift/reduce conflict (shift 60(0), red'n 64(13)) on '['
state 134
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  '~' expr.    (64)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 64 (src line 250)

	and  goto 81
	or  goto 82
	equals  goto 83

135: shift/reduce conflict (shift 80(0), red'n 72(13)) on SYM_IN
135: shift/reduce conflict (shift 87(0), red'n 72(13)) on '('
135: shift/reduce conflict (shift 61(0), red'n 72(13)) on '{'
135: shift/reduce conflict (shift 60(0), red'n 72(13)) on '['
state 135
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  BANG expr.    (72)
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 72 (src line 258)

	and  goto 81
	or  goto 82
	equals  goto 83

136: shift/reduce conflict (shift 80(0), red'n 79(15)) on SYM_IN
136: shift/reduce conflict (shift 87(0), red'n 79(15)) on '('
136: shift/reduce conflict (shift 61(0), red'n 79(15)) on '{'
136: shift/reduce conflict (shift 60(0), red'n 79(15)) on '['
state 136
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  INC expr.    (79)
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 79 (src line 266)

	and  goto 81
	or  goto 82
	equals  goto 83

137: shift/reduce conflict (shift 80(0), red'n 80(15)) on SYM_IN
137: shift/reduce conflict (shift 87(0), red'n 80(15)) on '('
137: shift/reduce conflict (shift 61(0), red'n 80(15)) on '{'
137: shift/reduce conflict (shift 60(0), red'n 80(15)) on '['
state 137
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  DEC expr.    (80)
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 80 (src line 267)

	and  goto 81
	or  goto 82
	equals  goto 83

138: shift/reduce conflict (shift 80(0), red'n 81(0)) on SYM_IN
138: shift/reduce conflict (shift 90(1), red'n 81(0)) on PLUSEQ
138: shift/reduce conflict (shift 91(1), red'n 81(0)) on MINUSEQ
138: shift/reduce conflict (shift 92(1), red'n 81(0)) on MULEQ
138: shift/reduce conflict (shift 93(1), red'n 81(0)) on DIVEQ
138: shift/reduce conflict (shift 95(1), red'n 81(0)) on AMPEQ
138: shift/reduce conflict (shift 84(15), red'n 81(0)) on INC
138: shift/reduce conflict (shift 85(15), red'n 81(0)) on DEC
138: shift/reduce conflict (shift 94(1), red'n 81(0)) on OREQ
138: shift/reduce conflict (shift 96(1), red'n 81(0)) on XOREQ
138: shift/reduce conflict (shift 97(1), red'n 81(0)) on RSHIFTEQ
138: shift/reduce conflict (shift 98(1), red'n 81(0)) on LSHIFTEQ
138: shift/reduce conflict (shift 99(1), red'n 81(0)) on '='
138: shift/reduce conflict (shift 62(2), red'n 81(0)) on '?'
138: shift/reduce conflict (shift 89(4), red'n 81(0)) on OR
138: shift/reduce conflict (shift 88(5), red'n 81(0)) on AND
138: shift/reduce conflict (shift 68(6), red'n 81(0)) on '|'
138: shift/reduce conflict (shift 70(7), red'n 81(0)) on '^'
138: shift/reduce conflict (shift 69(8), red'n 81(0)) on '&'
138: shift/reduce conflict (shift 73(9), red'n 81(0)) on GT
138: shift/reduce conflict (shift 75(9), red'n 81(0)) on GE
138: shift/reduce conflict (shift 74(9), red'n 81(0)) on LT
138: shift/reduce conflict (shift 76(9), red'n 81(0)) on LE
138: shift/reduce conflict (shift 77(9), red'n 81(0)) on EQ
138: shift/reduce conflict (shift 79(9), red'n 81(0)) on NE
138: shift/reduce conflict (shift 78(9), red'n 81(0)) on REGEXEQ
138: shift/reduce conflict (shift 71(10), red'n 81(0)) on LSHIFT
138: shift/reduce conflict (shift 72(10), red'n 81(0)) on RSHIFT
138: shift/reduce conflict (shift 64(11), red'n 81(0)) on '+'
138: shift/reduce conflict (shift 65(11), red'n 81(0)) on '-'
138: shift/reduce conflict (shift 66(12), red'n 81(0)) on '*'
138: shift/reduce conflict (shift 67(12), red'n 81(0)) on '/'
138: shift/reduce conflict (shift 63(14), red'n 81(0)) on '%'
138: shift/reduce conflict (shift 86(14), red'n 81(0)) on '.'
138: shift/reduce conflict (shift 87(0), red'n 81(0)) on '('
138: shift/reduce conflict (shift 61(0), red'n 81(0)) on '{'
138: shift/reduce conflict (shift 60(0), red'n 81(0)) on '['
state 138
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  EVAL expr.    (81)
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 81 (src line 268)

	and  goto 81
	or  goto 82
	equals  goto 83

139: shift/reduce conflict (shift 205(0), red'n 41(0)) on '('
state 139
	expr:  var.    (41)
	expr:  TASK var.'(' prefunc3 arglist ')' 
	expr:  var.'(' prefunc3 arglist ')' 

	'('  shift 205
	.  reduce 41 (src line 206)


state 140
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  TASK expr.'(' arglist ')' 
	expr:  TASK expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 206
	'('  shift 207
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 141
	expr:  NARGS '('.')' 

	')'  shift 208
	.  error


state 142
	expr:  TYPEOF '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 209
	var  goto 27

state 143
	expr:  XY '('.expr ',' expr ')' 
	expr:  XY '('.expr ',' expr ',' expr ',' expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 210
	var  goto 27

state 144
	expr:  FUNC '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 211
	var  goto 27

state 145
	expr:  FUNC var.$$101 funcstart '(' $$102 prmlist $$103 ')' '{' stmts '}' 
	expr:  FUNC var.$$105 funcstart $$106 '{' stmts '}' 
	$$101: .    (101)
	$$105: .    (105)

	'{'  reduce 105 (src line 333)
	.  reduce 101 (src line 321)

	$$101  goto 212
	$$105  goto 213

state 146
	expr:  FUNC uniqvar.$$108 funcstart '(' $$109 prmlist $$110 ')' '{' stmts '}' 
	expr:  FUNC uniqvar.$$112 funcstart $$113 '{' stmts '}' 
	$$108: .    (108)
	$$112: .    (112)

	'{'  reduce 112 (src line 355)
	.  reduce 108 (src line 343)

	$$108  goto 214
	$$112  goto 215

state 147
	uniqvar:  '?'.    (170)

	.  reduce 170 (src line 522)


state 148
	expr:  CLASS var.$$115 funcstart $$116 '{' methdefs '}' 
	$$115: .    (115)

	.  reduce 115 (src line 365)

	$$115  goto 216

state 149
	expr:  expr.'[' expr ']' 
	expr:  expr '[' expr.']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	']'  shift 217
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 150
	expr:  expr '{' select1.select2 expr select3 '}' end 
	select2: .    (167)

	.  reduce 167 (src line 513)

	select2  goto 218

state 151
	expr:  expr '?' tcond.expr goto ':' expr end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 219
	var  goto 27

152: shift/reduce conflict (shift 80(0), red'n 53(14)) on SYM_IN
152: shift/reduce conflict (shift 87(0), red'n 53(14)) on '('
152: shift/reduce conflict (shift 61(0), red'n 53(14)) on '{'
152: shift/reduce conflict (shift 60(0), red'n 53(14)) on '['
state 152
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (53)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 53 (src line 239)

	and  goto 81
	or  goto 82
	equals  goto 83

153: shift/reduce conflict (shift 80(0), red'n 54(11)) on SYM_IN
153: shift/reduce conflict (shift 87(0), red'n 54(11)) on '('
153: shift/reduce conflict (shift 61(0), red'n 54(11)) on '{'
153: shift/reduce conflict (shift 60(0), red'n 54(11)) on '['
state 153
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (54)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 54 (src line 240)

	and  goto 81
	or  goto 82
	equals  goto 83

154: shift/reduce conflict (shift 80(0), red'n 55(11)) on SYM_IN
154: shift/reduce conflict (shift 87(0), red'n 55(11)) on '('
154: shift/reduce conflict (shift 61(0), red'n 55(11)) on '{'
154: shift/reduce conflict (shift 60(0), red'n 55(11)) on '['
state 154
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (55)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 55 (src line 241)

	and  goto 81
	or  goto 82
	equals  goto 83

155: shift/reduce conflict (shift 80(0), red'n 56(12)) on SYM_IN
155: shift/reduce conflict (shift 87(0), red'n 56(12)) on '('
155: shift/reduce conflict (shift 61(0), red'n 56(12)) on '{'
155: shift/reduce conflict (shift 60(0), red'n 56(12)) on '['
state 155
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (56)
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 56 (src line 242)

	and  goto 81
	or  goto 82
	equals  goto 83

156: shift/reduce conflict (shift 80(0), red'n 57(12)) on SYM_IN
156: shift/reduce conflict (shift 87(0), red'n 57(12)) on '('
156: shift/reduce conflict (shift 61(0), red'n 57(12)) on '{'
156: shift/reduce conflict (shift 60(0), red'n 57(12)) on '['
state 156
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (57)
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 57 (src line 243)

	and  goto 81
	or  goto 82
	equals  goto 83

157: shift/reduce conflict (shift 80(0), red'n 58(6)) on SYM_IN
157: shift/reduce conflict (shift 87(0), red'n 58(6)) on '('
157: shift/reduce conflict (shift 61(0), red'n 58(6)) on '{'
157: shift/reduce conflict (shift 60(0), red'n 58(6)) on '['
state 157
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (58)
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 58 (src line 244)

	and  goto 81
	or  goto 82
	equals  goto 83

158: shift/reduce conflict (shift 80(0), red'n 59(8)) on SYM_IN
158: shift/reduce conflict (shift 87(0), red'n 59(8)) on '('
158: shift/reduce conflict (shift 61(0), red'n 59(8)) on '{'
158: shift/reduce conflict (shift 60(0), red'n 59(8)) on '['
state 158
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (59)
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 59 (src line 245)

	and  goto 81
	or  goto 82
	equals  goto 83

159: shift/reduce conflict (shift 80(0), red'n 60(7)) on SYM_IN
159: shift/reduce conflict (shift 87(0), red'n 60(7)) on '('
159: shift/reduce conflict (shift 61(0), red'n 60(7)) on '{'
159: shift/reduce conflict (shift 60(0), red'n 60(7)) on '['
state 159
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (60)
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 60 (src line 246)

	and  goto 81
	or  goto 82
	equals  goto 83

160: shift/reduce conflict (shift 80(0), red'n 61(10)) on SYM_IN
160: shift/reduce conflict (shift 87(0), red'n 61(10)) on '('
160: shift/reduce conflict (shift 61(0), red'n 61(10)) on '{'
160: shift/reduce conflict (shift 60(0), red'n 61(10)) on '['
state 160
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr LSHIFT expr.    (61)
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 61 (src line 247)

	and  goto 81
	or  goto 82
	equals  goto 83

161: shift/reduce conflict (shift 80(0), red'n 62(10)) on SYM_IN
161: shift/reduce conflict (shift 87(0), red'n 62(10)) on '('
161: shift/reduce conflict (shift 61(0), red'n 62(10)) on '{'
161: shift/reduce conflict (shift 60(0), red'n 62(10)) on '['
state 161
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr RSHIFT expr.    (62)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 62 (src line 248)

	and  goto 81
	or  goto 82
	equals  goto 83

162: shift/reduce conflict (shift 80(0), red'n 65(9)) on SYM_IN
162: shift/reduce conflict (shift 87(0), red'n 65(9)) on '('
162: shift/reduce conflict (shift 61(0), red'n 65(9)) on '{'
162: shift/reduce conflict (shift 60(0), red'n 65(9)) on '['
state 162
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (65)
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 65 (src line 251)

	and  goto 81
	or  goto 82
	equals  goto 83

163: shift/reduce conflict (shift 80(0), red'n 66(9)) on SYM_IN
163: shift/reduce conflict (shift 87(0), red'n 66(9)) on '('
163: shift/reduce conflict (shift 61(0), red'n 66(9)) on '{'
163: shift/reduce conflict (shift 60(0), red'n 66(9)) on '['
state 163
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (66)
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 66 (src line 252)

	and  goto 81
	or  goto 82
	equals  goto 83

164: shift/reduce conflict (shift 80(0), red'n 67(9)) on SYM_IN
164: shift/reduce conflict (shift 87(0), red'n 67(9)) on '('
164: shift/reduce conflict (shift 61(0), red'n 67(9)) on '{'
164: shift/reduce conflict (shift 60(0), red'n 67(9)) on '['
state 164
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (67)
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 67 (src line 253)

	and  goto 81
	or  goto 82
	equals  goto 83

165: shift/reduce conflict (shift 80(0), red'n 68(9)) on SYM_IN
165: shift/reduce conflict (shift 87(0), red'n 68(9)) on '('
165: shift/reduce conflict (shift 61(0), red'n 68(9)) on '{'
165: shift/reduce conflict (shift 60(0), red'n 68(9)) on '['
state 165
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (68)
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 68 (src line 254)

	and  goto 81
	or  goto 82
	equals  goto 83

166: shift/reduce conflict (shift 80(0), red'n 69(9)) on SYM_IN
166: shift/reduce conflict (shift 87(0), red'n 69(9)) on '('
166: shift/reduce conflict (shift 61(0), red'n 69(9)) on '{'
166: shift/reduce conflict (shift 60(0), red'n 69(9)) on '['
state 166
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (69)
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 69 (src line 255)

	and  goto 81
	or  goto 82
	equals  goto 83

167: shift/reduce conflict (shift 80(0), red'n 70(9)) on SYM_IN
167: shift/reduce conflict (shift 87(0), red'n 70(9)) on '('
167: shift/reduce conflict (shift 61(0), red'n 70(9)) on '{'
167: shift/reduce conflict (shift 60(0), red'n 70(9)) on '['
state 167
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr REGEXEQ expr.    (70)
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 70 (src line 256)

	and  goto 81
	or  goto 82
	equals  goto 83

168: shift/reduce conflict (shift 80(0), red'n 71(9)) on SYM_IN
168: shift/reduce conflict (shift 87(0), red'n 71(9)) on '('
168: shift/reduce conflict (shift 61(0), red'n 71(9)) on '{'
168: shift/reduce conflict (shift 60(0), red'n 71(9)) on '['
state 168
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (71)
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	INC  shift 84
	DEC  shift 85
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 71 (src line 257)

	and  goto 81
	or  goto 82
	equals  goto 83

169: shift/reduce conflict (shift 80(0), red'n 73(0)) on SYM_IN
169: shift/reduce conflict (shift 90(1), red'n 73(0)) on PLUSEQ
169: shift/reduce conflict (shift 91(1), red'n 73(0)) on MINUSEQ
169: shift/reduce conflict (shift 92(1), red'n 73(0)) on MULEQ
169: shift/reduce conflict (shift 93(1), red'n 73(0)) on DIVEQ
169: shift/reduce conflict (shift 95(1), red'n 73(0)) on AMPEQ
169: shift/reduce conflict (shift 84(15), red'n 73(0)) on INC
169: shift/reduce conflict (shift 85(15), red'n 73(0)) on DEC
169: shift/reduce conflict (shift 94(1), red'n 73(0)) on OREQ
169: shift/reduce conflict (shift 96(1), red'n 73(0)) on XOREQ
169: shift/reduce conflict (shift 97(1), red'n 73(0)) on RSHIFTEQ
169: shift/reduce conflict (shift 98(1), red'n 73(0)) on LSHIFTEQ
169: shift/reduce conflict (shift 99(1), red'n 73(0)) on '='
169: shift/reduce conflict (shift 62(2), red'n 73(0)) on '?'
169: shift/reduce conflict (shift 89(4), red'n 73(0)) on OR
169: shift/reduce conflict (shift 88(5), red'n 73(0)) on AND
169: shift/reduce conflict (shift 68(6), red'n 73(0)) on '|'
169: shift/reduce conflict (shift 70(7), red'n 73(0)) on '^'
169: shift/reduce conflict (shift 69(8), red'n 73(0)) on '&'
169: shift/reduce conflict (shift 73(9), red'n 73(0)) on GT
169: shift/reduce conflict (shift 75(9), red'n 73(0)) on GE
169: shift/reduce conflict (shift 74(9), red'n 73(0)) on LT
169: shift/reduce conflict (shift 76(9), red'n 73(0)) on LE
169: shift/reduce conflict (shift 77(9), red'n 73(0)) on EQ
169: shift/reduce conflict (shift 79(9), red'n 73(0)) on NE
169: shift/reduce conflict (shift 78(9), red'n 73(0)) on REGEXEQ
169: shift/reduce conflict (shift 71(10), red'n 73(0)) on LSHIFT
169: shift/reduce conflict (shift 72(10), red'n 73(0)) on RSHIFT
169: shift/reduce conflict (shift 64(11), red'n 73(0)) on '+'
169: shift/reduce conflict (shift 65(11), red'n 73(0)) on '-'
169: shift/reduce conflict (shift 66(12), red'n 73(0)) on '*'
169: shift/reduce conflict (shift 67(12), red'n 73(0)) on '/'
169: shift/reduce conflict (shift 63(14), red'n 73(0)) on '%'
169: shift/reduce conflict (shift 86(14), red'n 73(0)) on '.'
169: shift/reduce conflict (shift 87(0), red'n 73(0)) on '('
169: shift/reduce conflict (shift 61(0), red'n 73(0)) on '{'
169: shift/reduce conflict (shift 60(0), red'n 73(0)) on '['
state 169
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr SYM_IN expr.    (73)
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 73 (src line 259)

	and  goto 81
	or  goto 82
	equals  goto 83

170: shift/reduce conflict (shift 80(0), red'n 155(0)) on SYM_IN
170: shift/reduce conflict (shift 90(1), red'n 155(0)) on PLUSEQ
170: shift/reduce conflict (shift 91(1), red'n 155(0)) on MINUSEQ
170: shift/reduce conflict (shift 92(1), red'n 155(0)) on MULEQ
170: shift/reduce conflict (shift 93(1), red'n 155(0)) on DIVEQ
170: shift/reduce conflict (shift 95(1), red'n 155(0)) on AMPEQ
170: shift/reduce conflict (shift 84(15), red'n 155(0)) on INC
170: shift/reduce conflict (shift 85(15), red'n 155(0)) on DEC
170: shift/reduce conflict (shift 94(1), red'n 155(0)) on OREQ
170: shift/reduce conflict (shift 96(1), red'n 155(0)) on XOREQ
170: shift/reduce conflict (shift 97(1), red'n 155(0)) on RSHIFTEQ
170: shift/reduce conflict (shift 98(1), red'n 155(0)) on LSHIFTEQ
170: shift/reduce conflict (shift 99(1), red'n 155(0)) on '='
170: shift/reduce conflict (shift 62(2), red'n 155(0)) on '?'
170: shift/reduce conflict (shift 89(4), red'n 155(0)) on OR
170: shift/reduce conflict (shift 88(5), red'n 155(0)) on AND
170: shift/reduce conflict (shift 68(6), red'n 155(0)) on '|'
170: shift/reduce conflict (shift 70(7), red'n 155(0)) on '^'
170: shift/reduce conflict (shift 69(8), red'n 155(0)) on '&'
170: shift/reduce conflict (shift 73(9), red'n 155(0)) on GT
170: shift/reduce conflict (shift 75(9), red'n 155(0)) on GE
170: shift/reduce conflict (shift 74(9), red'n 155(0)) on LT
170: shift/reduce conflict (shift 76(9), red'n 155(0)) on LE
170: shift/reduce conflict (shift 77(9), red'n 155(0)) on EQ
170: shift/reduce conflict (shift 79(9), red'n 155(0)) on NE
170: shift/reduce conflict (shift 78(9), red'n 155(0)) on REGEXEQ
170: shift/reduce conflict (shift 71(10), red'n 155(0)) on LSHIFT
170: shift/reduce conflict (shift 72(10), red'n 155(0)) on RSHIFT
170: shift/reduce conflict (shift 64(11), red'n 155(0)) on '+'
170: shift/reduce conflict (shift 65(11), red'n 155(0)) on '-'
170: shift/reduce conflict (shift 66(12), red'n 155(0)) on '*'
170: shift/reduce conflict (shift 67(12), red'n 155(0)) on '/'
170: shift/reduce conflict (shift 63(14), red'n 155(0)) on '%'
170: shift/reduce conflict (shift 86(14), red'n 155(0)) on '.'
170: shift/reduce conflict (shift 87(0), red'n 155(0)) on '('
170: shift/reduce conflict (shift 61(0), red'n 155(0)) on '{'
170: shift/reduce conflict (shift 60(0), red'n 155(0)) on '['
state 170
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr and expr.end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	end: .    (155)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 155 (src line 486)

	end  goto 220
	and  goto 81
	or  goto 82
	equals  goto 83

171: shift/reduce conflict (shift 80(0), red'n 155(0)) on SYM_IN
171: shift/reduce conflict (shift 90(1), red'n 155(0)) on PLUSEQ
171: shift/reduce conflict (shift 91(1), red'n 155(0)) on MINUSEQ
171: shift/reduce conflict (shift 92(1), red'n 155(0)) on MULEQ
171: shift/reduce conflict (shift 93(1), red'n 155(0)) on DIVEQ
171: shift/reduce conflict (shift 95(1), red'n 155(0)) on AMPEQ
171: shift/reduce conflict (shift 84(15), red'n 155(0)) on INC
171: shift/reduce conflict (shift 85(15), red'n 155(0)) on DEC
171: shift/reduce conflict (shift 94(1), red'n 155(0)) on OREQ
171: shift/reduce conflict (shift 96(1), red'n 155(0)) on XOREQ
171: shift/reduce conflict (shift 97(1), red'n 155(0)) on RSHIFTEQ
171: shift/reduce conflict (shift 98(1), red'n 155(0)) on LSHIFTEQ
171: shift/reduce conflict (shift 99(1), red'n 155(0)) on '='
171: shift/reduce conflict (shift 62(2), red'n 155(0)) on '?'
171: shift/reduce conflict (shift 89(4), red'n 155(0)) on OR
171: shift/reduce conflict (shift 88(5), red'n 155(0)) on AND
171: shift/reduce conflict (shift 68(6), red'n 155(0)) on '|'
171: shift/reduce conflict (shift 70(7), red'n 155(0)) on '^'
171: shift/reduce conflict (shift 69(8), red'n 155(0)) on '&'
171: shift/reduce conflict (shift 73(9), red'n 155(0)) on GT
171: shift/reduce conflict (shift 75(9), red'n 155(0)) on GE
171: shift/reduce conflict (shift 74(9), red'n 155(0)) on LT
171: shift/reduce conflict (shift 76(9), red'n 155(0)) on LE
171: shift/reduce conflict (shift 77(9), red'n 155(0)) on EQ
171: shift/reduce conflict (shift 79(9), red'n 155(0)) on NE
171: shift/reduce conflict (shift 78(9), red'n 155(0)) on REGEXEQ
171: shift/reduce conflict (shift 71(10), red'n 155(0)) on LSHIFT
171: shift/reduce conflict (shift 72(10), red'n 155(0)) on RSHIFT
171: shift/reduce conflict (shift 64(11), red'n 155(0)) on '+'
171: shift/reduce conflict (shift 65(11), red'n 155(0)) on '-'
171: shift/reduce conflict (shift 66(12), red'n 155(0)) on '*'
171: shift/reduce conflict (shift 67(12), red'n 155(0)) on '/'
171: shift/reduce conflict (shift 63(14), red'n 155(0)) on '%'
171: shift/reduce conflict (shift 86(14), red'n 155(0)) on '.'
171: shift/reduce conflict (shift 87(0), red'n 155(0)) on '('
171: shift/reduce conflict (shift 61(0), red'n 155(0)) on '{'
171: shift/reduce conflict (shift 60(0), red'n 155(0)) on '['
state 171
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr or expr.end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	end: .    (155)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 155 (src line 486)

	end  goto 221
	and  goto 81
	or  goto 82
	equals  goto 83

172: shift/reduce conflict (shift 80(0), red'n 76(0)) on SYM_IN
172: shift/reduce conflict (shift 90(1), red'n 76(0)) on PLUSEQ
172: shift/reduce conflict (shift 91(1), red'n 76(0)) on MINUSEQ
172: shift/reduce conflict (shift 92(1), red'n 76(0)) on MULEQ
172: shift/reduce conflict (shift 93(1), red'n 76(0)) on DIVEQ
172: shift/reduce conflict (shift 95(1), red'n 76(0)) on AMPEQ
172: shift/reduce conflict (shift 84(15), red'n 76(0)) on INC
172: shift/reduce conflict (shift 85(15), red'n 76(0)) on DEC
172: shift/reduce conflict (shift 94(1), red'n 76(0)) on OREQ
172: shift/reduce conflict (shift 96(1), red'n 76(0)) on XOREQ
172: shift/reduce conflict (shift 97(1), red'n 76(0)) on RSHIFTEQ
172: shift/reduce conflict (shift 98(1), red'n 76(0)) on LSHIFTEQ
172: shift/reduce conflict (shift 99(1), red'n 76(0)) on '='
172: shift/reduce conflict (shift 62(2), red'n 76(0)) on '?'
172: shift/reduce conflict (shift 89(4), red'n 76(0)) on OR
172: shift/reduce conflict (shift 88(5), red'n 76(0)) on AND
172: shift/reduce conflict (shift 68(6), red'n 76(0)) on '|'
172: shift/reduce conflict (shift 70(7), red'n 76(0)) on '^'
172: shift/reduce conflict (shift 69(8), red'n 76(0)) on '&'
172: shift/reduce conflict (shift 73(9), red'n 76(0)) on GT
172: shift/reduce conflict (shift 75(9), red'n 76(0)) on GE
172: shift/reduce conflict (shift 74(9), red'n 76(0)) on LT
172: shift/reduce conflict (shift 76(9), red'n 76(0)) on LE
172: shift/reduce conflict (shift 77(9), red'n 76(0)) on EQ
172: shift/reduce conflict (shift 79(9), red'n 76(0)) on NE
172: shift/reduce conflict (shift 78(9), red'n 76(0)) on REGEXEQ
172: shift/reduce conflict (shift 71(10), red'n 76(0)) on LSHIFT
172: shift/reduce conflict (shift 72(10), red'n 76(0)) on RSHIFT
172: shift/reduce conflict (shift 64(11), red'n 76(0)) on '+'
172: shift/reduce conflict (shift 65(11), red'n 76(0)) on '-'
172: shift/reduce conflict (shift 66(12), red'n 76(0)) on '*'
172: shift/reduce conflict (shift 67(12), red'n 76(0)) on '/'
172: shift/reduce conflict (shift 63(14), red'n 76(0)) on '%'
172: shift/reduce conflict (shift 86(14), red'n 76(0)) on '.'
172: shift/reduce conflict (shift 87(0), red'n 76(0)) on '('
172: shift/reduce conflict (shift 61(0), red'n 76(0)) on '{'
172: shift/reduce conflict (shift 60(0), red'n 76(0)) on '['
state 172
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr equals expr.    (76)
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 76 (src line 263)

	and  goto 81
	or  goto 82
	equals  goto 83

state 173
	expr:  expr '.' dottype.    (85)

	.  reduce 85 (src line 272)


174: shift/reduce conflict (shift 222(0), red'n 86(14)) on '('
state 174
	expr:  expr '.' method.    (86)
	expr:  expr '.' method.'(' preobj arglist ')' 

	'('  shift 222
	.  reduce 86 (src line 273)


state 175
	method:  NAME.    (214)

	.  reduce 214 (src line 578)


state 176
	method:  SYM_DELETE.    (215)

	.  reduce 215 (src line 579)


state 177
	method:  CLASS.    (216)

	.  reduce 216 (src line 580)


state 178
	method:  '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 223
	var  goto 27

state 179
	expr:  expr '(' prefunc1.arglist ')' 
	arglist: .    (177)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 177 (src line 532)

	expr  goto 228
	arglist  goto 224
	var  goto 27
	args  goto 225

state 180
	stmtnv:  RETURN '(' ')'.    (13)

	.  reduce 13 (src line 94)


state 181
	stmtnv:  RETURN '(' expr.')' 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 229
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

182: shift/reduce conflict (shift 230(0), red'n 18(0)) on ','
state 182
	stmtnv:  GLOBALDEC $$17 globlist.    (18)
	globlist:  globlist.',' globvar 

	','  shift 230
	.  reduce 18 (src line 108)


state 183
	globlist:  globvar.    (196)

	.  reduce 196 (src line 557)


state 184
	globvar:  var.    (195)

	.  reduce 195 (src line 555)


state 185
	expr:  GLOBALDEC '(' $$97.globvar $$98 ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 184
	globvar  goto 231

state 186
	expr:  '{' stmts '}'.    (19)

	.  reduce 19 (src line 110)


state 187
	expr:  ONCHANGE '(' var.',' expr ')' 

	','  shift 232
	.  error


state 188
	expr:  WHILE $$23 '('.expr tcond ')' stmt goto end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 233
	var  goto 27

state 189
	expr:  FOR '(' optstmt.$$25 ';' optrelx tfcond ';' optstmt goto ')' stmt goto end 
	$$25: .    (25)

	.  reduce 25 (src line 137)

	$$25  goto 234

190: shift/reduce conflict (shift 235(0), red'n 41(0)) on SYM_IN
190: shift/reduce conflict (shift 129(0), red'n 41(0)) on '('
state 190
	expr:  FOR '(' var.SYM_IN $$27 expr forin1 forin2 ')' stmt goto forinend 
	expr:  var.    (41)
	expr:  var.'(' prefunc3 arglist ')' 

	SYM_IN  shift 235
	'('  shift 129
	.  reduce 41 (src line 206)


state 191
	optstmt:  nosemi.    (6)

	.  reduce 6 (src line 83)


state 192
	expr:  IF '(' expr.tcond ')' stmt end 
	expr:  IF '(' expr.tcond ')' stmt ELSE goto stmt end 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	tcond: .    (157)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 157 (src line 490)

	tcond  goto 236
	and  goto 81
	or  goto 82
	equals  goto 83

state 193
	expr:  KW_NEW var '('.prefunc3 $$31 narglist ')' 
	prefunc3: .    (131)

	.  reduce 131 (src line 450)

	prefunc3  goto 237

state 194
	expr:  KW_NEW '(' prefunc3.expr ')' var '(' narglist ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 238
	var  goto 27

state 195
	expr:  UNDEFINE '(' var.')' 

	')'  shift 239
	.  error


state 196
	expr:  '[' newthing1 arrlist.']' 
	arrlist:  arrlist.',' arritem 

	','  shift 241
	']'  shift 240
	.  error


state 197
	arrlist:  arritem.    (193)

	.  reduce 193 (src line 552)


state 198
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	arritem:  expr.'=' expr 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 242
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 199
	expr:  var '(' prefunc3.arglist ')' 
	arglist: .    (177)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 177 (src line 532)

	expr  goto 228
	arglist  goto 243
	var  goto 27
	args  goto 225

state 200
	expr:  '(' expr ')'.    (47)

	.  reduce 47 (src line 230)


201: shift/reduce conflict (shift 129(0), red'n 41(0)) on '('
state 201
	expr:  var.    (41)
	expr:  DEFINED '(' var.')' 
	expr:  var.'(' prefunc3 arglist ')' 

	'('  shift 129
	')'  shift 244
	.  reduce 41 (src line 206)


state 202
	expr:  DEFINED '(' '$'.')' 
	expr:  '$'.    (82)

	')'  shift 245
	.  reduce 82 (src line 269)


state 203
	expr:  DEFINED '(' DOLLAR2.')' 
	expr:  DOLLAR2.    (83)

	')'  shift 246
	.  reduce 83 (src line 270)


state 204
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  DEFINED '(' expr.'.' method ')' 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 247
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 205
	expr:  TASK var '('.prefunc3 arglist ')' 
	expr:  var '('.prefunc3 arglist ')' 
	prefunc3: .    (131)

	.  reduce 131 (src line 450)

	prefunc3  goto 248

state 206
	expr:  expr '.'.dottype 
	expr:  expr '.'.method 
	expr:  expr '.'.method '(' preobj arglist ')' 
	expr:  TASK expr '.'.method '(' preobj arglist ')' 

	SYM_DELETE  shift 176
	CLASS  shift 177
	DUR  shift 119
	VOL  shift 118
	TIME  shift 122
	CHAN  shift 120
	PITCH  shift 123
	LENGTH  shift 124
	NUMBER  shift 128
	TYPE  shift 125
	ATTRIB  shift 126
	FLAGS  shift 127
	PORT  shift 121
	NAME  shift 175
	'('  shift 178
	.  error

	method  goto 249
	dottype  goto 173

207: shift/reduce conflict (shift 28(0), red'n 130(0)) on QMARK2
207: shift/reduce conflict (shift 38(0), red'n 130(0)) on DOLLAR2
207: shift/reduce conflict (shift 17(0), red'n 130(0)) on WHILE
207: shift/reduce conflict (shift 226(0), red'n 130(0)) on DOTDOTDOT
207: shift/reduce conflict (shift 19(0), red'n 130(0)) on IF
207: shift/reduce conflict (shift 18(0), red'n 130(0)) on FOR
207: shift/reduce conflict (shift 36(0), red'n 130(0)) on EVAL
207: shift/reduce conflict (shift 40(0), red'n 130(0)) on TASK
207: shift/reduce conflict (shift 14(0), red'n 130(0)) on SYM_DELETE
207: shift/reduce conflict (shift 21(0), red'n 130(0)) on UNDEFINE
207: shift/reduce conflict (shift 44(0), red'n 130(0)) on FUNC
207: shift/reduce conflict (shift 30(0), red'n 130(0)) on DEFINED
207: shift/reduce conflict (shift 15(0), red'n 130(0)) on READONLY
207: shift/reduce conflict (shift 16(0), red'n 130(0)) on ONCHANGE
207: shift/reduce conflict (shift 105(0), red'n 130(0)) on GLOBALDEC
207: shift/reduce conflict (shift 45(0), red'n 130(0)) on CLASS
207: shift/reduce conflict (shift 20(0), red'n 130(0)) on KW_NEW
207: shift/reduce conflict (shift 41(0), red'n 130(0)) on NARGS
207: shift/reduce conflict (shift 42(0), red'n 130(0)) on TYPEOF
207: shift/reduce conflict (shift 43(0), red'n 130(0)) on XY
207: shift/reduce conflict (shift 48(0), red'n 130(0)) on DUR
207: shift/reduce conflict (shift 47(0), red'n 130(0)) on VOL
207: shift/reduce conflict (shift 51(0), red'n 130(0)) on TIME
207: shift/reduce conflict (shift 49(0), red'n 130(0)) on CHAN
207: shift/reduce conflict (shift 52(0), red'n 130(0)) on PITCH
207: shift/reduce conflict (shift 53(0), red'n 130(0)) on LENGTH
207: shift/reduce conflict (shift 57(0), red'n 130(0)) on NUMBER
207: shift/reduce conflict (shift 54(0), red'n 130(0)) on TYPE
207: shift/reduce conflict (shift 55(0), red'n 130(0)) on ATTRIB
207: shift/reduce conflict (shift 56(0), red'n 130(0)) on FLAGS
207: shift/reduce conflict (shift 227(0), red'n 130(0)) on VARG
207: shift/reduce conflict (shift 50(0), red'n 130(0)) on PORT
207: shift/reduce conflict (shift 26(0), red'n 130(0)) on PHRASE
207: shift/reduce conflict (shift 25(0), red'n 130(0)) on STRING
207: shift/reduce conflict (shift 46(0), red'n 130(0)) on NAME
207: shift/reduce conflict (shift 23(0), red'n 130(0)) on INTEGER
207: shift/reduce conflict (shift 39(0), red'n 130(0)) on OBJECT
207: shift/reduce conflict (shift 24(0), red'n 130(0)) on DOUBLE
207: shift/reduce conflict (shift 34(15), red'n 130(0)) on INC
207: shift/reduce conflict (shift 35(15), red'n 130(0)) on DEC
207: shift/reduce conflict (shift 31(11), red'n 130(0)) on '-'
207: shift/reduce conflict (shift 33(13), red'n 130(0)) on BANG
207: shift/reduce conflict (shift 32(13), red'n 130(0)) on '~'
207: shift/reduce conflict (shift 29(0), red'n 130(0)) on '('
 207: reduce/reduce conflict  (red'ns 177 and 130) on ')'
207: shift/reduce conflict (shift 13(0), red'n 130(0)) on '{'
207: shift/reduce conflict (shift 22(0), red'n 130(0)) on '['
207: shift/reduce conflict (shift 37(0), red'n 130(0)) on '$'
state 207
	expr:  TASK expr '('.arglist ')' 
	expr:  expr '('.prefunc1 arglist ')' 
	arglist: .    (177)
	prefunc1: .    (130)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 130 (src line 448)

	expr  goto 228
	prefunc1  goto 179
	arglist  goto 250
	var  goto 27
	args  goto 225

state 208
	expr:  NARGS '(' ')'.    (93)

	.  reduce 93 (src line 302)


state 209
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  TYPEOF '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 251
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 210
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  XY '(' expr.',' expr ')' 
	expr:  XY '(' expr.',' expr ',' expr ',' expr ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	','  shift 252
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 211
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  FUNC '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 253
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 212
	expr:  FUNC var $$101.funcstart '(' $$102 prmlist $$103 ')' '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 254

state 213
	expr:  FUNC var $$105.funcstart $$106 '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 255

state 214
	expr:  FUNC uniqvar $$108.funcstart '(' $$109 prmlist $$110 ')' '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 256

state 215
	expr:  FUNC uniqvar $$112.funcstart $$113 '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 257

state 216
	expr:  CLASS var $$115.funcstart $$116 '{' methdefs '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 258

state 217
	expr:  expr '[' expr ']'.    (44)

	.  reduce 44 (src line 220)


state 218
	expr:  expr '{' select1 select2.expr select3 '}' end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 259
	var  goto 27

state 219
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr '?' tcond expr.goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	goto: .    (156)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 156 (src line 488)

	goto  goto 260
	and  goto 81
	or  goto 82
	equals  goto 83

state 220
	expr:  expr and expr end.    (74)

	.  reduce 74 (src line 260)


state 221
	expr:  expr or expr end.    (75)

	.  reduce 75 (src line 261)


state 222
	expr:  expr '.' method '('.preobj arglist ')' 
	preobj: .    (133)

	.  reduce 133 (src line 456)

	preobj  goto 261

state 223
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	method:  '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 262
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 224
	expr:  expr '(' prefunc1 arglist.')' 

	')'  shift 263
	.  error


state 225
	arglist:  args.    (178)
	arglist:  args.',' DOTDOTDOT 
	arglist:  args.',' VARG '(' expr ')' 
	args:  args.',' expr 

	','  shift 264
	.  reduce 178 (src line 533)


state 226
	arglist:  DOTDOTDOT.    (179)

	.  reduce 179 (src line 534)


state 227
	arglist:  VARG.'(' expr ')' 

	'('  shift 265
	.  error


state 228
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	args:  expr.    (189)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 189 (src line 546)

	and  goto 81
	or  goto 82
	equals  goto 83

state 229
	stmtnv:  RETURN '(' expr ')'.    (14)

	.  reduce 14 (src line 96)


state 230
	globlist:  globlist ','.globvar 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 184
	globvar  goto 266

state 231
	expr:  GLOBALDEC '(' $$97 globvar.$$98 ')' 
	$$98: .    (98)

	.  reduce 98 (src line 317)

	$$98  goto 267

state 232
	expr:  ONCHANGE '(' var ','.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 268
	var  goto 27

state 233
	expr:  WHILE $$23 '(' expr.tcond ')' stmt goto end 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	tcond: .    (157)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 157 (src line 490)

	tcond  goto 269
	and  goto 81
	or  goto 82
	equals  goto 83

state 234
	expr:  FOR '(' optstmt $$25.';' optrelx tfcond ';' optstmt goto ')' stmt goto end 

	';'  shift 270
	.  error


state 235
	expr:  FOR '(' var SYM_IN.$$27 expr forin1 forin2 ')' stmt goto forinend 
	$$27: .    (27)

	.  reduce 27 (src line 149)

	$$27  goto 271

state 236
	expr:  IF '(' expr tcond.')' stmt end 
	expr:  IF '(' expr tcond.')' stmt ELSE goto stmt end 

	')'  shift 272
	.  error


state 237
	expr:  KW_NEW var '(' prefunc3.$$31 narglist ')' 
	$$31: .    (31)

	.  reduce 31 (src line 169)

	$$31  goto 273

state 238
	expr:  KW_NEW '(' prefunc3 expr.')' var '(' narglist ')' 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 274
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 239
	expr:  UNDEFINE '(' var ')'.    (35)

	.  reduce 35 (src line 193)


state 240
	expr:  '[' newthing1 arrlist ']'.    (36)

	.  reduce 36 (src line 197)


state 241
	arrlist:  arrlist ','.arritem 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 198
	var  goto 27
	arritem  goto 275

242: shift/reduce conflict (shift 28(0), red'n 154(1)) on QMARK2
242: shift/reduce conflict (shift 38(0), red'n 154(1)) on DOLLAR2
242: shift/reduce conflict (shift 17(0), red'n 154(1)) on WHILE
242: shift/reduce conflict (shift 19(0), red'n 154(1)) on IF
242: shift/reduce conflict (shift 18(0), red'n 154(1)) on FOR
242: shift/reduce conflict (shift 36(0), red'n 154(1)) on EVAL
242: shift/reduce conflict (shift 40(0), red'n 154(1)) on TASK
242: shift/reduce conflict (shift 14(0), red'n 154(1)) on SYM_DELETE
242: shift/reduce conflict (shift 21(0), red'n 154(1)) on UNDEFINE
242: shift/reduce conflict (shift 44(0), red'n 154(1)) on FUNC
242: shift/reduce conflict (shift 30(0), red'n 154(1)) on DEFINED
242: shift/reduce conflict (shift 15(0), red'n 154(1)) on READONLY
242: shift/reduce conflict (shift 16(0), red'n 154(1)) on ONCHANGE
242: shift/reduce conflict (shift 105(0), red'n 154(1)) on GLOBALDEC
242: shift/reduce conflict (shift 45(0), red'n 154(1)) on CLASS
242: shift/reduce conflict (shift 20(0), red'n 154(1)) on KW_NEW
242: shift/reduce conflict (shift 41(0), red'n 154(1)) on NARGS
242: shift/reduce conflict (shift 42(0), red'n 154(1)) on TYPEOF
242: shift/reduce conflict (shift 43(0), red'n 154(1)) on XY
242: shift/reduce conflict (shift 48(0), red'n 154(1)) on DUR
242: shift/reduce conflict (shift 47(0), red'n 154(1)) on VOL
242: shift/reduce conflict (shift 51(0), red'n 154(1)) on TIME
242: shift/reduce conflict (shift 49(0), red'n 154(1)) on CHAN
242: shift/reduce conflict (shift 52(0), red'n 154(1)) on PITCH
242: shift/reduce conflict (shift 53(0), red'n 154(1)) on LENGTH
242: shift/reduce conflict (shift 57(0), red'n 154(1)) on NUMBER
242: shift/reduce conflict (shift 54(0), red'n 154(1)) on TYPE
242: shift/reduce conflict (shift 55(0), red'n 154(1)) on ATTRIB
242: shift/reduce conflict (shift 56(0), red'n 154(1)) on FLAGS
242: shift/reduce conflict (shift 50(0), red'n 154(1)) on PORT
242: shift/reduce conflict (shift 26(0), red'n 154(1)) on PHRASE
242: shift/reduce conflict (shift 25(0), red'n 154(1)) on STRING
242: shift/reduce conflict (shift 46(0), red'n 154(1)) on NAME
242: shift/reduce conflict (shift 23(0), red'n 154(1)) on INTEGER
242: shift/reduce conflict (shift 39(0), red'n 154(1)) on OBJECT
242: shift/reduce conflict (shift 24(0), red'n 154(1)) on DOUBLE
242: shift/reduce conflict (shift 29(0), red'n 154(1)) on '('
242: shift/reduce conflict (shift 13(0), red'n 154(1)) on '{'
242: shift/reduce conflict (shift 22(0), red'n 154(1)) on '['
242: shift/reduce conflict (shift 37(0), red'n 154(1)) on '$'
state 242
	equals:  '='.    (154)
	arritem:  expr '='.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 276
	var  goto 27

state 243
	expr:  var '(' prefunc3 arglist.')' 

	')'  shift 277
	.  error


state 244
	expr:  DEFINED '(' var ')'.    (48)

	.  reduce 48 (src line 231)


state 245
	expr:  DEFINED '(' '$' ')'.    (49)

	.  reduce 49 (src line 232)


state 246
	expr:  DEFINED '(' DOLLAR2 ')'.    (50)

	.  reduce 50 (src line 233)


state 247
	expr:  DEFINED '(' expr '.'.method ')' 
	expr:  expr '.'.dottype 
	expr:  expr '.'.method 
	expr:  expr '.'.method '(' preobj arglist ')' 

	SYM_DELETE  shift 176
	CLASS  shift 177
	DUR  shift 119
	VOL  shift 118
	TIME  shift 122
	CHAN  shift 120
	PITCH  shift 123
	LENGTH  shift 124
	NUMBER  shift 128
	TYPE  shift 125
	ATTRIB  shift 126
	FLAGS  shift 127
	PORT  shift 121
	NAME  shift 175
	'('  shift 178
	.  error

	method  goto 278
	dottype  goto 173

state 248
	expr:  TASK var '(' prefunc3.arglist ')' 
	expr:  var '(' prefunc3.arglist ')' 
	arglist: .    (177)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 177 (src line 532)

	expr  goto 228
	arglist  goto 279
	var  goto 27
	args  goto 225

249: shift/reduce conflict (shift 280(0), red'n 86(14)) on '('
state 249
	expr:  expr '.' method.    (86)
	expr:  expr '.' method.'(' preobj arglist ')' 
	expr:  TASK expr '.' method.'(' preobj arglist ')' 

	'('  shift 280
	.  reduce 86 (src line 273)


state 250
	expr:  TASK expr '(' arglist.')' 

	')'  shift 281
	.  error


state 251
	expr:  TYPEOF '(' expr ')'.    (94)

	.  reduce 94 (src line 305)


state 252
	expr:  XY '(' expr ','.expr ')' 
	expr:  XY '(' expr ','.expr ',' expr ',' expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 282
	var  goto 27

state 253
	expr:  FUNC '(' expr ')'.    (100)

	.  reduce 100 (src line 320)


state 254
	expr:  FUNC var $$101 funcstart.'(' $$102 prmlist $$103 ')' '{' stmts '}' 

	'('  shift 283
	.  error


state 255
	expr:  FUNC var $$105 funcstart.$$106 '{' stmts '}' 
	$$106: .    (106)

	.  reduce 106 (src line 335)

	$$106  goto 284

state 256
	expr:  FUNC uniqvar $$108 funcstart.'(' $$109 prmlist $$110 ')' '{' stmts '}' 

	'('  shift 285
	.  error


state 257
	expr:  FUNC uniqvar $$112 funcstart.$$113 '{' stmts '}' 
	$$113: .    (113)

	.  reduce 113 (src line 357)

	$$113  goto 286

state 258
	expr:  CLASS var $$115 funcstart.$$116 '{' methdefs '}' 
	$$116: .    (116)

	.  reduce 116 (src line 369)

	$$116  goto 287

state 259
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr '{' select1 select2 expr.select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	select3: .    (168)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 168 (src line 515)

	select3  goto 288
	and  goto 81
	or  goto 82
	equals  goto 83

state 260
	expr:  expr '?' tcond expr goto.':' expr end 

	':'  shift 289
	.  error


state 261
	expr:  expr '.' method '(' preobj.arglist ')' 
	arglist: .    (177)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 177 (src line 532)

	expr  goto 228
	arglist  goto 290
	var  goto 27
	args  goto 225

state 262
	method:  '(' expr ')'.    (217)

	.  reduce 217 (src line 581)


state 263
	expr:  expr '(' prefunc1 arglist ')'.    (92)

	.  reduce 92 (src line 299)


state 264
	arglist:  args ','.DOTDOTDOT 
	arglist:  args ','.VARG '(' expr ')' 
	args:  args ','.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 291
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 292
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 293
	var  goto 27

state 265
	arglist:  VARG '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 294
	var  goto 27

state 266
	globlist:  globlist ',' globvar.    (197)

	.  reduce 197 (src line 558)


state 267
	expr:  GLOBALDEC '(' $$97 globvar $$98.')' 

	')'  shift 295
	.  error


state 268
	expr:  ONCHANGE '(' var ',' expr.')' 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 296
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 269
	expr:  WHILE $$23 '(' expr tcond.')' stmt goto end 

	')'  shift 297
	.  error


state 270
	expr:  FOR '(' optstmt $$25 ';'.optrelx tfcond ';' optstmt goto ')' stmt goto end 
	optrelx: .    (159)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 159 (src line 494)

	expr  goto 299
	optrelx  goto 298
	var  goto 27

state 271
	expr:  FOR '(' var SYM_IN $$27.expr forin1 forin2 ')' stmt goto forinend 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 300
	var  goto 27

state 272
	expr:  IF '(' expr tcond ')'.stmt end 
	expr:  IF '(' expr tcond ')'.stmt ELSE goto stmt end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 8
	stmt  goto 301
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 273
	expr:  KW_NEW var '(' prefunc3 $$31.narglist ')' 
	narglist: .    (183)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 304
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 305
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 183 (src line 539)

	expr  goto 228
	narglist  goto 302
	var  goto 27
	args  goto 303

state 274
	expr:  KW_NEW '(' prefunc3 expr ')'.var '(' narglist ')' 

	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 306

state 275
	arrlist:  arrlist ',' arritem.    (194)

	.  reduce 194 (src line 553)


state 276
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	arritem:  expr '=' expr.    (191)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 191 (src line 549)

	and  goto 81
	or  goto 82
	equals  goto 83

state 277
	expr:  var '(' prefunc3 arglist ')'.    (91)

	.  reduce 91 (src line 291)


278: shift/reduce conflict (shift 222(0), red'n 86(14)) on '('
state 278
	expr:  DEFINED '(' expr '.' method.')' 
	expr:  expr '.' method.    (86)
	expr:  expr '.' method.'(' preobj arglist ')' 

	'('  shift 222
	')'  shift 307
	.  reduce 86 (src line 273)


state 279
	expr:  TASK var '(' prefunc3 arglist.')' 
	expr:  var '(' prefunc3 arglist.')' 

	')'  shift 308
	.  error


state 280
	expr:  expr '.' method '('.preobj arglist ')' 
	expr:  TASK expr '.' method '('.preobj arglist ')' 
	preobj: .    (133)

	.  reduce 133 (src line 456)

	preobj  goto 309

state 281
	expr:  TASK expr '(' arglist ')'.    (89)

	.  reduce 89 (src line 285)


state 282
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  XY '(' expr ',' expr.')' 
	expr:  XY '(' expr ',' expr.',' expr ',' expr ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 310
	'{'  shift 61
	','  shift 311
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 283
	expr:  FUNC var $$101 funcstart '('.$$102 prmlist $$103 ')' '{' stmts '}' 
	$$102: .    (102)

	.  reduce 102 (src line 323)

	$$102  goto 312

state 284
	expr:  FUNC var $$105 funcstart $$106.'{' stmts '}' 

	'{'  shift 313
	.  error


state 285
	expr:  FUNC uniqvar $$108 funcstart '('.$$109 prmlist $$110 ')' '{' stmts '}' 
	$$109: .    (109)

	.  reduce 109 (src line 345)

	$$109  goto 314

state 286
	expr:  FUNC uniqvar $$112 funcstart $$113.'{' stmts '}' 

	'{'  shift 315
	.  error


state 287
	expr:  CLASS var $$115 funcstart $$116.'{' methdefs '}' 

	'{'  shift 316
	.  error


state 288
	expr:  expr '{' select1 select2 expr select3.'}' end 

	'}'  shift 317
	.  error


state 289
	expr:  expr '?' tcond expr goto ':'.expr end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 318
	var  goto 27

state 290
	expr:  expr '.' method '(' preobj arglist.')' 

	')'  shift 319
	.  error


state 291
	arglist:  args ',' DOTDOTDOT.    (180)

	.  reduce 180 (src line 535)


state 292
	arglist:  args ',' VARG.'(' expr ')' 

	'('  shift 320
	.  error


state 293
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	args:  args ',' expr.    (190)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 190 (src line 547)

	and  goto 81
	or  goto 82
	equals  goto 83

state 294
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	arglist:  VARG '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 321
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 295
	expr:  GLOBALDEC '(' $$97 globvar $$98 ')'.    (99)

	.  reduce 99 (src line 317)


state 296
	expr:  ONCHANGE '(' var ',' expr ')'.    (22)

	.  reduce 22 (src line 125)


state 297
	expr:  WHILE $$23 '(' expr tcond ')'.stmt goto end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 8
	stmt  goto 322
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 298
	expr:  FOR '(' optstmt $$25 ';' optrelx.tfcond ';' optstmt goto ')' stmt goto end 
	tfcond: .    (158)

	.  reduce 158 (src line 492)

	tfcond  goto 323

state 299
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	optrelx:  expr.    (160)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 160 (src line 495)

	and  goto 81
	or  goto 82
	equals  goto 83

state 300
	expr:  FOR '(' var SYM_IN $$27 expr.forin1 forin2 ')' stmt goto forinend 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	forin1: .    (161)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 161 (src line 497)

	forin1  goto 324
	and  goto 81
	or  goto 82
	equals  goto 83

301: shift/reduce conflict (shift 326(0), red'n 155(0)) on ELSE
state 301
	expr:  IF '(' expr tcond ')' stmt.end 
	expr:  IF '(' expr tcond ')' stmt.ELSE goto stmt end 
	end: .    (155)

	ELSE  shift 326
	.  reduce 155 (src line 486)

	end  goto 325

state 302
	expr:  KW_NEW var '(' prefunc3 $$31 narglist.')' 

	')'  shift 327
	.  error


state 303
	narglist:  args.    (184)
	narglist:  args.',' DOTDOTDOT 
	narglist:  args.',' VARG '(' expr ')' 
	args:  args.',' expr 

	','  shift 328
	.  reduce 184 (src line 540)


state 304
	narglist:  DOTDOTDOT.    (185)

	.  reduce 185 (src line 541)


state 305
	narglist:  VARG.'(' expr ')' 

	'('  shift 329
	.  error


state 306
	expr:  KW_NEW '(' prefunc3 expr ')' var.'(' narglist ')' 

	'('  shift 330
	.  error


state 307
	expr:  DEFINED '(' expr '.' method ')'.    (51)

	.  reduce 51 (src line 234)


 308: reduce/reduce conflict  (red'ns 88 and 91) on SYM_IN
 308: reduce/reduce conflict  (red'ns 88 and 91) on PLUSEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on MINUSEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on MULEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on DIVEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on AMPEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on INC
 308: reduce/reduce conflict  (red'ns 88 and 91) on DEC
 308: reduce/reduce conflict  (red'ns 88 and 91) on OREQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on XOREQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on RSHIFTEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on LSHIFTEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on '='
 308: reduce/reduce conflict  (red'ns 88 and 91) on '?'
 308: reduce/reduce conflict  (red'ns 88 and 91) on OR
 308: reduce/reduce conflict  (red'ns 88 and 91) on AND
 308: reduce/reduce conflict  (red'ns 88 and 91) on '|'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '^'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '&'
 308: reduce/reduce conflict  (red'ns 88 and 91) on GT
 308: reduce/reduce conflict  (red'ns 88 and 91) on GE
 308: reduce/reduce conflict  (red'ns 88 and 91) on LT
 308: reduce/reduce conflict  (red'ns 88 and 91) on LE
 308: reduce/reduce conflict  (red'ns 88 and 91) on EQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on NE
 308: reduce/reduce conflict  (red'ns 88 and 91) on REGEXEQ
 308: reduce/reduce conflict  (red'ns 88 and 91) on LSHIFT
 308: reduce/reduce conflict  (red'ns 88 and 91) on RSHIFT
 308: reduce/reduce conflict  (red'ns 88 and 91) on '+'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '-'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '*'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '/'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '%'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '.'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '('
 308: reduce/reduce conflict  (red'ns 88 and 91) on '{'
 308: reduce/reduce conflict  (red'ns 88 and 91) on '['
state 308
	expr:  TASK var '(' prefunc3 arglist ')'.    (88)
	expr:  var '(' prefunc3 arglist ')'.    (91)

	.  reduce 88 (src line 277)


state 309
	expr:  expr '.' method '(' preobj.arglist ')' 
	expr:  TASK expr '.' method '(' preobj.arglist ')' 
	arglist: .    (177)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 226
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 227
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 177 (src line 532)

	expr  goto 228
	arglist  goto 331
	var  goto 27
	args  goto 225

state 310
	expr:  XY '(' expr ',' expr ')'.    (95)

	.  reduce 95 (src line 309)


state 311
	expr:  XY '(' expr ',' expr ','.expr ',' expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 332
	var  goto 27

state 312
	expr:  FUNC var $$101 funcstart '(' $$102.prmlist $$103 ')' '{' stmts '}' 
	prmlist: .    (171)

	DOTDOTDOT  shift 335
	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  reduce 171 (src line 524)

	var  goto 336
	prmlist  goto 333
	prms  goto 334

state 313
	expr:  FUNC var $$105 funcstart $$106 '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 337
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 314
	expr:  FUNC uniqvar $$108 funcstart '(' $$109.prmlist $$110 ')' '{' stmts '}' 
	prmlist: .    (171)

	DOTDOTDOT  shift 335
	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  reduce 171 (src line 524)

	var  goto 336
	prmlist  goto 338
	prms  goto 334

state 315
	expr:  FUNC uniqvar $$112 funcstart $$113 '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 339
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 316
	expr:  CLASS var $$115 funcstart $$116 '{'.methdefs '}' 
	methdefs: .    (118)

	METHOD  shift 342
	.  reduce 118 (src line 404)

	methdefs  goto 340
	methdef  goto 341

state 317
	expr:  expr '{' select1 select2 expr select3 '}'.end 
	end: .    (155)

	.  reduce 155 (src line 486)

	end  goto 343

318: shift/reduce conflict (shift 80(0), red'n 155(0)) on SYM_IN
318: shift/reduce conflict (shift 90(1), red'n 155(0)) on PLUSEQ
318: shift/reduce conflict (shift 91(1), red'n 155(0)) on MINUSEQ
318: shift/reduce conflict (shift 92(1), red'n 155(0)) on MULEQ
318: shift/reduce conflict (shift 93(1), red'n 155(0)) on DIVEQ
318: shift/reduce conflict (shift 95(1), red'n 155(0)) on AMPEQ
318: shift/reduce conflict (shift 84(15), red'n 155(0)) on INC
318: shift/reduce conflict (shift 85(15), red'n 155(0)) on DEC
318: shift/reduce conflict (shift 94(1), red'n 155(0)) on OREQ
318: shift/reduce conflict (shift 96(1), red'n 155(0)) on XOREQ
318: shift/reduce conflict (shift 97(1), red'n 155(0)) on RSHIFTEQ
318: shift/reduce conflict (shift 98(1), red'n 155(0)) on LSHIFTEQ
318: shift/reduce conflict (shift 99(1), red'n 155(0)) on '='
318: shift/reduce conflict (shift 62(2), red'n 155(0)) on '?'
318: shift/reduce conflict (shift 89(4), red'n 155(0)) on OR
318: shift/reduce conflict (shift 88(5), red'n 155(0)) on AND
318: shift/reduce conflict (shift 68(6), red'n 155(0)) on '|'
318: shift/reduce conflict (shift 70(7), red'n 155(0)) on '^'
318: shift/reduce conflict (shift 69(8), red'n 155(0)) on '&'
318: shift/reduce conflict (shift 73(9), red'n 155(0)) on GT
318: shift/reduce conflict (shift 75(9), red'n 155(0)) on GE
318: shift/reduce conflict (shift 74(9), red'n 155(0)) on LT
318: shift/reduce conflict (shift 76(9), red'n 155(0)) on LE
318: shift/reduce conflict (shift 77(9), red'n 155(0)) on EQ
318: shift/reduce conflict (shift 79(9), red'n 155(0)) on NE
318: shift/reduce conflict (shift 78(9), red'n 155(0)) on REGEXEQ
318: shift/reduce conflict (shift 71(10), red'n 155(0)) on LSHIFT
318: shift/reduce conflict (shift 72(10), red'n 155(0)) on RSHIFT
318: shift/reduce conflict (shift 64(11), red'n 155(0)) on '+'
318: shift/reduce conflict (shift 65(11), red'n 155(0)) on '-'
318: shift/reduce conflict (shift 66(12), red'n 155(0)) on '*'
318: shift/reduce conflict (shift 67(12), red'n 155(0)) on '/'
318: shift/reduce conflict (shift 63(14), red'n 155(0)) on '%'
318: shift/reduce conflict (shift 86(14), red'n 155(0)) on '.'
318: shift/reduce conflict (shift 87(0), red'n 155(0)) on '('
318: shift/reduce conflict (shift 61(0), red'n 155(0)) on '{'
318: shift/reduce conflict (shift 60(0), red'n 155(0)) on '['
state 318
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr '?' tcond expr goto ':' expr.end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	end: .    (155)

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	'['  shift 60
	.  reduce 155 (src line 486)

	end  goto 344
	and  goto 81
	or  goto 82
	equals  goto 83

state 319
	expr:  expr '.' method '(' preobj arglist ')'.    (87)

	.  reduce 87 (src line 274)


state 320
	arglist:  args ',' VARG '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 345
	var  goto 27

state 321
	arglist:  VARG '(' expr ')'.    (181)

	.  reduce 181 (src line 536)


state 322
	expr:  WHILE $$23 '(' expr tcond ')' stmt.goto end 
	goto: .    (156)

	.  reduce 156 (src line 488)

	goto  goto 346

state 323
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond.';' optstmt goto ')' stmt goto end 

	';'  shift 347
	.  error


state 324
	expr:  FOR '(' var SYM_IN $$27 expr forin1.forin2 ')' stmt goto forinend 
	forin2: .    (162)

	.  reduce 162 (src line 499)

	forin2  goto 348

state 325
	expr:  IF '(' expr tcond ')' stmt end.    (29)

	.  reduce 29 (src line 158)


state 326
	expr:  IF '(' expr tcond ')' stmt ELSE.goto stmt end 
	goto: .    (156)

	.  reduce 156 (src line 488)

	goto  goto 349

state 327
	expr:  KW_NEW var '(' prefunc3 $$31 narglist ')'.    (32)

	.  reduce 32 (src line 171)


state 328
	narglist:  args ','.DOTDOTDOT 
	narglist:  args ','.VARG '(' expr ')' 
	args:  args ','.expr 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 350
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 351
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 293
	var  goto 27

state 329
	narglist:  VARG '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 352
	var  goto 27

state 330
	expr:  KW_NEW '(' prefunc3 expr ')' var '('.narglist ')' 
	narglist: .    (183)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	DOTDOTDOT  shift 304
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	VARG  shift 305
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 183 (src line 539)

	expr  goto 228
	narglist  goto 353
	var  goto 27
	args  goto 303

state 331
	expr:  expr '.' method '(' preobj arglist.')' 
	expr:  TASK expr '.' method '(' preobj arglist.')' 

	')'  shift 354
	.  error


state 332
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  XY '(' expr ',' expr ',' expr.',' expr ')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	'{'  shift 61
	','  shift 355
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 333
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist.$$103 ')' '{' stmts '}' 
	$$103: .    (103)

	.  reduce 103 (src line 325)

	$$103  goto 356

state 334
	prmlist:  prms.    (172)
	prmlist:  prms.',' DOTDOTDOT 
	prms:  prms.',' var 

	','  shift 357
	.  reduce 172 (src line 525)


state 335
	prmlist:  DOTDOTDOT.    (173)

	.  reduce 173 (src line 526)


state 336
	prms:  var.    (175)

	.  reduce 175 (src line 529)


state 337
	expr:  FUNC var $$105 funcstart $$106 '{' stmts.'}' 

	'}'  shift 358
	.  error


state 338
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist.$$110 ')' '{' stmts '}' 
	$$110: .    (110)

	.  reduce 110 (src line 347)

	$$110  goto 359

state 339
	expr:  FUNC uniqvar $$112 funcstart $$113 '{' stmts.'}' 

	'}'  shift 360
	.  error


state 340
	expr:  CLASS var $$115 funcstart $$116 '{' methdefs.'}' 

	'}'  shift 361
	.  error


state 341
	methdefs:  methdef.methdefs 
	methdefs: .    (118)

	METHOD  shift 342
	.  reduce 118 (src line 404)

	methdefs  goto 362
	methdef  goto 341

state 342
	methdef:  METHOD.methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}' 
	methdef:  METHOD.methname $$126 uniqm $$127 funcstart $$128 '{' stmts '}' 

	SYM_DELETE  shift 365
	CLASS  shift 366
	NAME  shift 364
	.  error

	methname  goto 363

state 343
	expr:  expr '{' select1 select2 expr select3 '}' end.    (45)

	.  reduce 45 (src line 221)


state 344
	expr:  expr '?' tcond expr goto ':' expr end.    (46)

	.  reduce 46 (src line 226)


state 345
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	arglist:  args ',' VARG '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 367
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 346
	expr:  WHILE $$23 '(' expr tcond ')' stmt goto.end 
	end: .    (155)

	.  reduce 155 (src line 486)

	end  goto 368

state 347
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';'.optstmt goto ')' stmt goto end 
	optstmt: .    (5)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 5 (src line 82)

	expr  goto 8
	nosemi  goto 191
	optstmt  goto 369
	stmtnv  goto 7
	var  goto 27

state 348
	expr:  FOR '(' var SYM_IN $$27 expr forin1 forin2.')' stmt goto forinend 

	')'  shift 370
	.  error


state 349
	expr:  IF '(' expr tcond ')' stmt ELSE goto.stmt end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 8
	stmt  goto 371
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 350
	narglist:  args ',' DOTDOTDOT.    (186)

	.  reduce 186 (src line 542)


state 351
	narglist:  args ',' VARG.'(' expr ')' 

	'('  shift 372
	.  error


state 352
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	narglist:  VARG '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 373
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 353
	expr:  KW_NEW '(' prefunc3 expr ')' var '(' narglist.')' 

	')'  shift 374
	.  error


 354: reduce/reduce conflict  (red'ns 87 and 90) on SYM_IN
 354: reduce/reduce conflict  (red'ns 87 and 90) on PLUSEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on MINUSEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on MULEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on DIVEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on AMPEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on INC
 354: reduce/reduce conflict  (red'ns 87 and 90) on DEC
 354: reduce/reduce conflict  (red'ns 87 and 90) on OREQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on XOREQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on RSHIFTEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on LSHIFTEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on '='
 354: reduce/reduce conflict  (red'ns 87 and 90) on '?'
 354: reduce/reduce conflict  (red'ns 87 and 90) on OR
 354: reduce/reduce conflict  (red'ns 87 and 90) on AND
 354: reduce/reduce conflict  (red'ns 87 and 90) on '|'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '^'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '&'
 354: reduce/reduce conflict  (red'ns 87 and 90) on GT
 354: reduce/reduce conflict  (red'ns 87 and 90) on GE
 354: reduce/reduce conflict  (red'ns 87 and 90) on LT
 354: reduce/reduce conflict  (red'ns 87 and 90) on LE
 354: reduce/reduce conflict  (red'ns 87 and 90) on EQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on NE
 354: reduce/reduce conflict  (red'ns 87 and 90) on REGEXEQ
 354: reduce/reduce conflict  (red'ns 87 and 90) on LSHIFT
 354: reduce/reduce conflict  (red'ns 87 and 90) on RSHIFT
 354: reduce/reduce conflict  (red'ns 87 and 90) on '+'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '-'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '*'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '/'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '%'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '.'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '('
 354: reduce/reduce conflict  (red'ns 87 and 90) on '{'
 354: reduce/reduce conflict  (red'ns 87 and 90) on '['
state 354
	expr:  expr '.' method '(' preobj arglist ')'.    (87)
	expr:  TASK expr '.' method '(' preobj arglist ')'.    (90)

	SYM_IN  reduce 87 (src line 274)
	PLUSEQ  reduce 87 (src line 274)
	MINUSEQ  reduce 87 (src line 274)
	MULEQ  reduce 87 (src line 274)
	DIVEQ  reduce 87 (src line 274)
	AMPEQ  reduce 87 (src line 274)
	INC  reduce 87 (src line 274)
	DEC  reduce 87 (src line 274)
	OREQ  reduce 87 (src line 274)
	XOREQ  reduce 87 (src line 274)
	RSHIFTEQ  reduce 87 (src line 274)
	LSHIFTEQ  reduce 87 (src line 274)
	'='  reduce 87 (src line 274)
	'?'  reduce 87 (src line 274)
	OR  reduce 87 (src line 274)
	AND  reduce 87 (src line 274)
	'|'  reduce 87 (src line 274)
	'^'  reduce 87 (src line 274)
	'&'  reduce 87 (src line 274)
	GT  reduce 87 (src line 274)
	GE  reduce 87 (src line 274)
	LT  reduce 87 (src line 274)
	LE  reduce 87 (src line 274)
	EQ  reduce 87 (src line 274)
	NE  reduce 87 (src line 274)
	REGEXEQ  reduce 87 (src line 274)
	LSHIFT  reduce 87 (src line 274)
	RSHIFT  reduce 87 (src line 274)
	'+'  reduce 87 (src line 274)
	'-'  reduce 87 (src line 274)
	'*'  reduce 87 (src line 274)
	'/'  reduce 87 (src line 274)
	'%'  reduce 87 (src line 274)
	'.'  reduce 87 (src line 274)
	'('  reduce 87 (src line 274)
	'{'  reduce 87 (src line 274)
	'['  reduce 87 (src line 274)
	.  reduce 90 (src line 288)


state 355
	expr:  XY '(' expr ',' expr ',' expr ','.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 375
	var  goto 27

state 356
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist $$103.')' '{' stmts '}' 

	')'  shift 376
	.  error


state 357
	prmlist:  prms ','.DOTDOTDOT 
	prms:  prms ','.var 

	DOTDOTDOT  shift 377
	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  error

	var  goto 378

state 358
	expr:  FUNC var $$105 funcstart $$106 '{' stmts '}'.    (107)

	.  reduce 107 (src line 337)


state 359
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist $$110.')' '{' stmts '}' 

	')'  shift 379
	.  error


state 360
	expr:  FUNC uniqvar $$112 funcstart $$113 '{' stmts '}'.    (114)

	.  reduce 114 (src line 359)


state 361
	expr:  CLASS var $$115 funcstart $$116 '{' methdefs '}'.    (117)

	.  reduce 117 (src line 379)


state 362
	methdefs:  methdef methdefs.    (119)

	.  reduce 119 (src line 405)


state 363
	methdef:  METHOD methname.$$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}' 
	methdef:  METHOD methname.$$126 uniqm $$127 funcstart $$128 '{' stmts '}' 
	$$121: .    (121)
	$$126: .    (126)

	'{'  reduce 126 (src line 429)
	.  reduce 121 (src line 409)

	$$121  goto 380
	$$126  goto 381

state 364
	methname:  NAME.    (211)

	.  reduce 211 (src line 574)


state 365
	methname:  SYM_DELETE.    (212)

	.  reduce 212 (src line 575)


state 366
	methname:  CLASS.    (213)

	.  reduce 213 (src line 576)


state 367
	arglist:  args ',' VARG '(' expr ')'.    (182)

	.  reduce 182 (src line 537)


state 368
	expr:  WHILE $$23 '(' expr tcond ')' stmt goto end.    (24)

	.  reduce 24 (src line 129)


state 369
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt.goto ')' stmt goto end 
	goto: .    (156)

	.  reduce 156 (src line 488)

	goto  goto 382

state 370
	expr:  FOR '(' var SYM_IN $$27 expr forin1 forin2 ')'.stmt goto forinend 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 8
	stmt  goto 383
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 371
	expr:  IF '(' expr tcond ')' stmt ELSE goto stmt.end 
	end: .    (155)

	.  reduce 155 (src line 486)

	end  goto 384

state 372
	narglist:  args ',' VARG '('.expr ')' 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 105
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 385
	var  goto 27

state 373
	narglist:  VARG '(' expr ')'.    (187)

	.  reduce 187 (src line 543)


state 374
	expr:  KW_NEW '(' prefunc3 expr ')' var '(' narglist ')'.    (33)

	.  reduce 33 (src line 180)


state 375
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	expr:  XY '(' expr ',' expr ',' expr ',' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 386
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 376
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist $$103 ')'.'{' stmts '}' 

	'{'  shift 387
	.  error


state 377
	prmlist:  prms ',' DOTDOTDOT.    (174)

	.  reduce 174 (src line 527)


state 378
	prms:  prms ',' var.    (176)

	.  reduce 176 (src line 530)


state 379
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist $$110 ')'.'{' stmts '}' 

	'{'  shift 388
	.  error


state 380
	methdef:  METHOD methname $$121.uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}' 
	uniqm: .    (120)

	.  reduce 120 (src line 407)

	uniqm  goto 389

state 381
	methdef:  METHOD methname $$126.uniqm $$127 funcstart $$128 '{' stmts '}' 
	uniqm: .    (120)

	.  reduce 120 (src line 407)

	uniqm  goto 390

state 382
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto.')' stmt goto end 

	')'  shift 391
	.  error


state 383
	expr:  FOR '(' var SYM_IN $$27 expr forin1 forin2 ')' stmt.goto forinend 
	goto: .    (156)

	.  reduce 156 (src line 488)

	goto  goto 392

state 384
	expr:  IF '(' expr tcond ')' stmt ELSE goto stmt end.    (30)

	.  reduce 30 (src line 163)


state 385
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' select1 select2 expr select3 '}' end 
	expr:  expr.'?' tcond expr goto ':' expr end 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.and expr end 
	expr:  expr.or expr end 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'.' method 
	expr:  expr.'.' method '(' preobj arglist ')' 
	expr:  expr.'(' prefunc1 arglist ')' 
	narglist:  args ',' VARG '(' expr.')' 

	SYM_IN  shift 80
	PLUSEQ  shift 90
	MINUSEQ  shift 91
	MULEQ  shift 92
	DIVEQ  shift 93
	AMPEQ  shift 95
	INC  shift 84
	DEC  shift 85
	OREQ  shift 94
	XOREQ  shift 96
	RSHIFTEQ  shift 97
	LSHIFTEQ  shift 98
	'='  shift 99
	'?'  shift 62
	OR  shift 89
	AND  shift 88
	'|'  shift 68
	'^'  shift 70
	'&'  shift 69
	GT  shift 73
	GE  shift 75
	LT  shift 74
	LE  shift 76
	EQ  shift 77
	NE  shift 79
	REGEXEQ  shift 78
	LSHIFT  shift 71
	RSHIFT  shift 72
	'+'  shift 64
	'-'  shift 65
	'*'  shift 66
	'/'  shift 67
	'%'  shift 63
	'.'  shift 86
	'('  shift 87
	')'  shift 393
	'{'  shift 61
	'['  shift 60
	.  error

	and  goto 81
	or  goto 82
	equals  goto 83

state 386
	expr:  XY '(' expr ',' expr ',' expr ',' expr ')'.    (96)

	.  reduce 96 (src line 313)


state 387
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist $$103 ')' '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 394
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 388
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist $$110 ')' '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 395
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 389
	methdef:  METHOD methname $$121 uniqm.$$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}' 
	$$122: .    (122)

	.  reduce 122 (src line 409)

	$$122  goto 396

state 390
	methdef:  METHOD methname $$126 uniqm.$$127 funcstart $$128 '{' stmts '}' 
	$$127: .    (127)

	.  reduce 127 (src line 429)

	$$127  goto 397

state 391
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')'.stmt goto end 

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  error

	expr  goto 8
	stmt  goto 398
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 392
	expr:  FOR '(' var SYM_IN $$27 expr forin1 forin2 ')' stmt goto.forinend 
	forinend: .    (163)

	.  reduce 163 (src line 501)

	forinend  goto 399

state 393
	narglist:  args ',' VARG '(' expr ')'.    (188)

	.  reduce 188 (src line 544)


state 394
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist $$103 ')' '{' stmts.'}' 

	'}'  shift 400
	.  error


state 395
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist $$110 ')' '{' stmts.'}' 

	'}'  shift 401
	.  error


state 396
	methdef:  METHOD methname $$121 uniqm $$122.funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 402

state 397
	methdef:  METHOD methname $$126 uniqm $$127.funcstart $$128 '{' stmts '}' 
	funcstart: .    (169)

	.  reduce 169 (src line 517)

	funcstart  goto 403

state 398
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')' stmt.goto end 
	goto: .    (156)

	.  reduce 156 (src line 488)

	goto  goto 404

state 399
	expr:  FOR '(' var SYM_IN $$27 expr forin1 forin2 ')' stmt goto forinend.    (28)

	.  reduce 28 (src line 149)


state 400
	expr:  FUNC var $$101 funcstart '(' $$102 prmlist $$103 ')' '{' stmts '}'.    (104)

	.  reduce 104 (src line 327)


state 401
	expr:  FUNC uniqvar $$108 funcstart '(' $$109 prmlist $$110 ')' '{' stmts '}'.    (111)

	.  reduce 111 (src line 349)


state 402
	methdef:  METHOD methname $$121 uniqm $$122 funcstart.'(' $$123 prmlist $$124 ')' '{' stmts '}' 

	'('  shift 405
	.  error


state 403
	methdef:  METHOD methname $$126 uniqm $$127 funcstart.$$128 '{' stmts '}' 
	$$128: .    (128)

	.  reduce 128 (src line 435)

	$$128  goto 406

state 404
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')' stmt goto.end 
	end: .    (155)

	.  reduce 155 (src line 486)

	end  goto 407

state 405
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '('.$$123 prmlist $$124 ')' '{' stmts '}' 
	$$123: .    (123)

	.  reduce 123 (src line 415)

	$$123  goto 408

state 406
	methdef:  METHOD methname $$126 uniqm $$127 funcstart $$128.'{' stmts '}' 

	'{'  shift 409
	.  error


state 407
	expr:  FOR '(' optstmt $$25 ';' optrelx tfcond ';' optstmt goto ')' stmt goto end.    (26)

	.  reduce 26 (src line 137)


state 408
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123.prmlist $$124 ')' '{' stmts '}' 
	prmlist: .    (171)

	DOTDOTDOT  shift 335
	CLASS  shift 107
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	NAME  shift 46
	.  reduce 171 (src line 524)

	var  goto 336
	prmlist  goto 410
	prms  goto 334

state 409
	methdef:  METHOD methname $$126 uniqm $$127 funcstart $$128 '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 411
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 410
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist.$$124 ')' '{' stmts '}' 
	$$124: .    (124)

	.  reduce 124 (src line 417)

	$$124  goto 412

state 411
	methdef:  METHOD methname $$126 uniqm $$127 funcstart $$128 '{' stmts.'}' 

	'}'  shift 413
	.  error


state 412
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124.')' '{' stmts '}' 

	')'  shift 414
	.  error


state 413
	methdef:  METHOD methname $$126 uniqm $$127 funcstart $$128 '{' stmts '}'.    (129)

	.  reduce 129 (src line 437)


state 414
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')'.'{' stmts '}' 

	'{'  shift 415
	.  error


state 415
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{'.stmts '}' 
	stmts: .    (3)

	QMARK2  shift 28
	DOLLAR2  shift 38
	WHILE  shift 17
	IF  shift 19
	FOR  shift 18
	EVAL  shift 36
	BREAK  shift 10
	CONTINUE  shift 11
	TASK  shift 40
	SYM_DELETE  shift 14
	UNDEFINE  shift 21
	RETURN  shift 9
	FUNC  shift 44
	DEFINED  shift 30
	READONLY  shift 15
	ONCHANGE  shift 16
	GLOBALDEC  shift 12
	CLASS  shift 45
	KW_NEW  shift 20
	NARGS  shift 41
	TYPEOF  shift 42
	XY  shift 43
	DUR  shift 48
	VOL  shift 47
	TIME  shift 51
	CHAN  shift 49
	PITCH  shift 52
	LENGTH  shift 53
	NUMBER  shift 57
	TYPE  shift 54
	ATTRIB  shift 55
	FLAGS  shift 56
	PORT  shift 50
	PHRASE  shift 26
	STRING  shift 25
	NAME  shift 46
	INTEGER  shift 23
	OBJECT  shift 39
	DOUBLE  shift 24
	INC  shift 34
	DEC  shift 35
	'-'  shift 31
	BANG  shift 33
	'~'  shift 32
	';'  shift 5
	'('  shift 29
	'{'  shift 13
	'['  shift 22
	'$'  shift 37
	.  reduce 3 (src line 79)

	expr  goto 8
	stmt  goto 4
	stmts  goto 416
	nosemi  goto 6
	stmtnv  goto 7
	var  goto 27

state 416
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts.'}' 

	'}'  shift 417
	.  error


state 417
	methdef:  METHOD methname $$121 uniqm $$122 funcstart '(' $$123 prmlist $$124 ')' '{' stmts '}'.    (125)

	.  reduce 125 (src line 419)


100 terminals, 71 nonterminals
218 grammar rules, 418/8000 states
507 shift/reduce, 75 reduce/reduce conflicts reported
120 working sets used
memory: parser 403/120000
359 extra closures
5739 shift entries, 90 exceptions
213 goto entries
311 entries saved by goto default
Optimizer space used: output 2403/120000
2403 table entries, 688 zero
maximum spread: 100, maximum offset: 415
